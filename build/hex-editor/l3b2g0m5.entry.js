const e=window.HexEditor.h;function t(e){return!(!e||!e.content)}class s{constructor(e){this.parent=e,this.added=new Uint8Array,this.pieces=[],this.chunk="",this.original=e.file,this.pieces=[{offset:0,length:this.original.length,source:"origin"}]}initEdit(e,t){if(this.inProgress={offset:e,type:t,content:[],index:-1,get length(){return this.content.length}},"insert"===t){let t,s,i,n=0;for(const[r,o]of this.pieces.entries())if((n+=o.length)>=e){t=o.length-n+e,s=r,i=o;break}this.inProgress.index=s+1,this.pieces.splice(s,1,...[{offset:i.offset,length:t,source:i.source},this.inProgress,{offset:i.offset+t,length:i.length-t,source:i.source}])}else{let t,s,i,n=0;for(const[r,o]of this.pieces.entries())if((n+=o.length)>=e){t=o.length-n+e,s=r,i=o;break}this.inProgress.index=s+1,this.pieces.splice(s,1,...[{offset:i.offset,length:t,source:i.source},this.inProgress,{offset:i.offset+t,length:i.length-t,source:i.source}])}}buildEdit(e){if(/^[a-fA-F0-9]$/.test(e.key)&&(this.chunk+=e.key,2===this.chunk.length)){this.inProgress.content.push(parseInt(this.chunk,16)),this.chunk="",this.parent.cursor+=1;let e=this.pieces.indexOf(this.inProgress);if("overwrite"===this.inProgress.type&&e!==this.pieces.length-1){const t=this.pieces[e+1];t.offset+=1,t.length-=1,0===t.length&&this.pieces.splice(e+1,1)}}}commit(){let e=new Uint8Array(this.added.length+this.inProgress.content.length);e.set(this.added,0),e.set(this.inProgress.content,this.added.length),this.pieces[this.inProgress.index]={offset:this.added.length,length:this.inProgress.length,source:"added"},console.log(this.pieces),this.added=e,this.inProgress=null,this.chunk=""}render(e,s){let i,n=new Uint8Array(s),r={added:[]},o=0,l=0;for(const[t,s]of this.pieces.entries())if((o+=s.length)>=e){i=s.length-o+e,l=t;break}(t(this.pieces[l])||"added"===this.pieces[l].source)&&r.added.push([e-i,e-i+this.pieces[l].length]);let h=this.getPieceBuffer(this.pieces[l]).subarray(i,i+s);o=h.length,n.set(h,0);for(let i=l+1;i<this.pieces.length;i++){let l=this.pieces[i];if(o+=l.length,(t(l)||"added"===l.source)&&r.added.push([e+o-l.length,e+o]),o>=s){n.set(this.getPieceBuffer(l).subarray(0,l.length-o+s),o-l.length);break}n.set(this.getPieceBuffer(l),o-l.length)}return o!==s?{out:n.subarray(0,o),meta:r}:{out:n,meta:r}}get length(){let e=0;for(const t of this.pieces)e+=t.length;return e}rollback(){}save(){}getPieceBuffer(e){return t(e)?new Uint8Array(e.content):"origin"===e.source?this.original.subarray(e.offset,e.offset+e.length):this.added.subarray(e.offset,e.offset+e.length)}}class i{constructor(){this.maxLines=30,this.bytesPerLine=16,this.bytesUntilForcedLine=0,this.asciiInline=!1,this.bytesPerGroup=4,this.mode="region",this.editType="overwrite",this.regionDepth=2,this.regions=[{start:0,end:64,name:"start",description:"the start of the file. Hopefully this works",subRegions:[{start:0,end:32,subRegions:[{start:0,end:8},{start:16,end:22}]},{start:32,end:64}]},{start:64,end:105},{start:617,end:873},{start:873,end:1024}],this.lineNumber=0,this.scroll=(e=>{e.preventDefault();let t=Math.ceil(e.deltaY/2);-0===t&&(t-=1),this.lineNumber+t<0?this.lineNumber=0:this.lineNumber+t>Math.floor(this.editController.length/this.bytesPerLine)-1?this.lineNumber=Math.floor(this.editController.length/this.bytesPerLine)-1:this.lineNumber+=t})}acceptFile(e){const t=e.target;this.fileMetadata=t.files[0];const i=new FileReader;i.readAsArrayBuffer(t.files[0]),i.onload=(e=>{this.file=new Uint8Array(e.target.result),this.editController=new s(this)})}showSelector(){return e("div",{class:"select"},e("label",{htmlFor:"file-uploader"},"select a file to upload: "),e("input",{type:"file",id:"file-uploader",onChange:e=>this.acceptFile(e)}))}showLoading(){return e("div",{class:"loading"},e("div",{id:"MEASURE",class:"hex",style:{position:"absolute",visibility:"hidden",padding:"0 5px"}},"AB"),e("p",null,"loading..."))}buildHexView(){const{lineNumber:t,maxLines:s,bytesPerLine:i,bytesPerGroup:n,asciiInline:r}=this,o=t*i,l=this.editController.render(o,s*i),h=l.out,a=l.meta.added,d=[];for(let e=0;e<s;e++)d.push(h.subarray(e*i,(e+1)*i));const c=[],u=[];for(const[t,s]of d.entries()){const l=o+t*i,h=[],d=[];let g="•",p=!1;if(0===s.length)break;for(const[t,i]of[...s.values()].entries()){let s;g=/\w|[!@#$%^&*()_+=\]\\:;"'>.<,\/?]/.test(String.fromCharCode(i))?String.fromCharCode(i):"•",s=r&&/\w/.test(g)?"."+g:i.toString(16).toUpperCase().padStart(2,"0");const o=[];t%n==n-1&&o.push("padByte"),this.cursor===l+t&&(o.push("cursor"),p=!0),this.selection&&this.selection.start<=l+t&&l+t<=this.selection.end&&o.push("selected");for(const[e,s]of a)if(e<=l+t&&l+t<s){o.push("added");break}h.push(e("span",{class:o.join(" ")},g)),d.push(e("span",{class:o.join(" ")},s))}c.push(e("div",{class:"hexLine"+(p?" selected":"")},d)),u.push(e("div",{class:"charLine"+(p?" selected":"")},h))}for(;c.length<s;)c.push(e("div",{class:"hexLine"},e("span",null,"-"))),u.push(e("div",{class:"charLine"},e("span",null,"-")));const g=[];for(let t=0;t<s;t++)g.push(e("div",{class:"lineLabel"},"0x"+(o+t*i).toString(16).padStart(8," ")));const p=document.getElementById("MEASURE").clientWidth,f=document.getElementById("MEASURE").clientHeight,m=[],b=(s,i=0,n)=>{if((0!==i||!(s.end<o||s.start>o+this.maxLines*this.bytesPerLine))&&i!==this.regionDepth)if(s.subRegions&&i+1!==this.regionDepth)for(const[e,t]of s.subRegions.entries())b(t,i+1,e);else{const r=s.start%this.bytesPerLine,l=s.end%this.bytesPerLine,h=Math.floor((s.end-s.start+r)/this.bytesPerLine);if(s.end<o||s.start>o+this.maxLines*this.bytesPerLine)return;const a=Math.floor(s.start/this.bytesPerLine)-t,d={0:["#77F","#BBF"],1:["#F77","#FBB"],2:["#7D7","#BDB"]};m.push(e("polygon",{onmousemove:`\n            if (window.canUpdateMousemove === undefined) {\n              window.canUpdateMousemove = true;\n            }\n            if (window.canUpdateMousemove) {\n              window.canUpdateMousemove = false;\n              document.documentElement.style.setProperty('--mouse-x', event.clientX);\n              document.documentElement.style.setProperty('--mouse-y', event.clientY);\n              document.getElementById('tooltip').setAttribute('active', true)\n              document.getElementById('tooltip').setAttribute('complex', '${JSON.stringify(Object.assign({},s,{subRegions:s.subRegions?s.subRegions.map(e=>e.name):null}))}');\n\n              setTimeout(() => {window.canUpdateMousemove = true}, 50);\n            }\n          `,onmouseleave:"document.getElementById('tooltip').setAttribute('active', false)",class:"region",points:`\n            0,${(1+a)*f}\n            ${r*p},${(1+a)*f}\n            ${r*p},${a*f}\n            ${this.bytesPerLine*p},${a*f}\n            ${this.bytesPerLine*p},${(h+a)*f}\n            ${l*p},${(h+a)*f}\n            ${l*p},${(h+a+1)*f}\n            0,${(h+1+a)*f}\n            `,fill:s.color||d[i%3][n%2],stroke:"none"}))}};for(const[e,t]of this.regions.entries())b(t,0,e);return{lineViews:c,charViews:u,lineLabels:g,regionMarkers:e("svg",{viewbox:`0 0 ${this.bytesPerLine*p} ${this.maxLines*f}`,width:`${this.bytesPerLine*p}`,height:`${this.maxLines*f}`},m)}}edit(e){if("readonly"===this.editType)return;const t=this.editController;t.inProgress||t.initEdit(this.cursor,this.editType),t.buildEdit(e)}showHex(){const{lineViews:t,charViews:s,lineLabels:i,regionMarkers:n}=this.buildHexView();return e("div",{class:"hex",onMouseEnter:e=>this._toggleScrollListener(e),onMouseLeave:e=>this._toggleScrollListener(e),onMouseDown:e=>this.beginSelection(e),onMouseUp:e=>this.endSelection(e),tabindex:"0",onKeyDown:e=>this.edit(e)},e("div",{id:"MEASURE",style:{position:"absolute",visibility:"hidden",padding:"0 5px"}},"AB"),e("div",{class:"lineLabels"},i),e("div",{class:"hexView"},e("div",{class:"highlight",style:{position:"absolute",top:"0",display:"noregion"===this.mode?"none":"block",zIndex:"region"===this.mode?"3":"0"}},n),e("div",{class:"main"},t)),e("div",{class:"asciiView"},s))}beginSelection(e){console.log(e.composedPath()),this.tempSelection=this.lineNumber*this.bytesPerLine+[...e.composedPath()[2].children].indexOf(e.composedPath()[1])*this.bytesPerLine+[...e.composedPath()[1].children].indexOf(e.composedPath()[0])}endSelection(e){const t=this.lineNumber*this.bytesPerLine+[...e.composedPath()[2].children].indexOf(e.composedPath()[1])*this.bytesPerLine+[...e.composedPath()[1].children].indexOf(e.composedPath()[0]);this.selection=this.tempSelection>t?{start:t,end:this.tempSelection}:{start:this.tempSelection,end:t},this.tempSelection=null,this.cursor=t,this.editController.inProgress&&this.editController.commit()}render(){return e("div",{class:"container"},this.fileMetadata?this.file?this.showHex():this.showLoading():this.showSelector())}_toggleScrollListener(e){"mouseenter"===e.type?e.target.addEventListener("wheel",this.scroll,{passive:!1}):e.target.removeEventListener("wheel",this.scroll,!1)}static get is(){return"hex-editor"}static get properties(){return{asciiInline:{type:Boolean,attr:"asciiinline"},bytesPerGroup:{type:Number,attr:"bytespergroup"},bytesPerLine:{type:Number,attr:"bytesperline"},bytesUntilForcedLine:{type:Number,attr:"bytes-until-forced-line"},cursor:{state:!0},editType:{type:String,attr:"edittype"},file:{state:!0},fileMetadata:{state:!0},lineNumber:{state:!0},maxLines:{type:Number,attr:"maxlines"},mode:{type:String,attr:"mode"},regionDepth:{type:Number,attr:"regiondepth"},regions:{type:"Any",attr:"regions"},selection:{state:!0}}}static get style(){return".container{overflow:scroll;position:relative;width:100vw;min-height:100%}.hex{font-family:Sourcecode Pro,Courier,monospace;font-size:15px}.asciiView,.hexView,.lineLabels{display:inline-block;padding:0 10px;white-space:pre;position:relative}.charLine span,.hexLine span{position:relative;height:17px;display:inline-block}.lineLabel{height:17px}.hexLine span{position:relative;padding:0 5px}.hexLine span:not(:last-child).padByte:after{background-color:rgba(0,0,0,.4);position:absolute;width:2px;height:100%;left:calc(100% - 1px);content:\"\"}.hexLine span{cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.charLine span.selected,.hexLine span.selected{background-color:rgba(136,136,255,.5)}.charLine span.cursor,.hexLine span.cursor{background-color:#008;color:#fff}.charLine span.added,.hexLine span.added{color:red}.hexLine span:hover{background-color:#000;color:#fff}.charLine:nth-child(2n-1),.hexLine:nth-child(2n-1),.lineLabel:nth-child(2n-1){background-color:#eff}.charLine.selected,.hexLine.selected{background-color:#ffa}.region{opacity:.8}.region:hover{opacity:.3;position:relative}"}}export{i as HexEditor};