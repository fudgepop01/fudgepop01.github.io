const t=window.HexEditor.h;class e{constructor(){this.active=!1}render(){if(!this.active)return;const e=[];if(this.data){let s="string"==typeof this.data?JSON.parse(this.data):this.data;for(const[i,r]of Object.entries(s))null!==r&&(e.push(t("span",null,i,": ",r)),e.push(t("br",null)))}else e.push(t("span",null,this.simpleText?this.simpleText:"placeholder"));return e}static get is(){return"my-tooltip"}static get properties(){return{active:{type:Boolean,attr:"active"},data:{type:String,attr:"complex"},simpleText:{type:String,attr:"simple"}}}static get style(){return"my-tooltip{position:fixed;display:none;-webkit-box-sizing:border-box;box-sizing:border-box;font-size:14px;max-width:400px;padding:5px;border-radius:2px;background-color:#000;color:#fff;z-index:1000;pointer-events:none}my-tooltip[active=true]{display:block;left:calc(var(--mouse-x) * 1px);top:calc(var(--mouse-y) * 1px);-webkit-transition:left .2s ease,top .2s ease;transition:left .2s ease,top .2s ease}"}}export{e as MyTooltip};