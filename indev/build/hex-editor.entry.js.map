{"file":"hex-editor.entry.esm.js","mappings":";;AASA,IAAY,WAIX;AAJD,WAAY,WAAW;EACrB,+CAAK,CAAA;EACL,6CAAI,CAAA;EACJ,2CAAG,CAAA;AACL,CAAC,EAJW,WAAW,KAAX,WAAW,QAItB;AACD,IAAY,UAKX;AALD,WAAY,UAAU;EACpB,6CAAK,CAAA;EACL,2CAAI,CAAA;EACJ,iDAAO,CAAA;EACP,6CAAK,CAAA;AACP,CAAC,EALW,UAAU,KAAV,UAAU,QAKrB;AACD,IAAY,SASX;AATD,WAAY,SAAS;EACnB,2BAAc,CAAA;EACd,6BAAgB,CAAA;EAChB,kCAAqB,CAAA;EACrB,mCAAsB,CAAA;EACtB,oCAAuB,CAAA;EACvB,kCAAqB,CAAA;EACrB,uBAAU,CAAA;EACV,uBAAU,CAAA;AACZ,CAAC,EATW,SAAS,KAAT,SAAS;;ACTrB,SAAS,YAAY,CAAC,KAAe;EACnC,IAAI,KAAK,YAAY,UAAU;IAAE,OAAO,IAAI,CAAC;;IACxC,OAAO,KAAK,CAAC;AACpB,CAAC;AAED,SAAS,IAAI,CAAI,GAAQ;EACvB,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC;IAAE,OAAO,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAC/C,OAAO,SAAS,CAAC;AACnB,CAAC;AAED,MAAe,QAAQ;EAIrB,YACS,MAAc,EACd,MAAc,EACd,WAAmB,CAAC,EACnB,MAAsC;IAHvC,WAAM,GAAN,MAAM,CAAQ;IACd,WAAM,GAAN,MAAM,CAAQ;IACd,aAAQ,GAAR,QAAQ,CAAY;IACnB,WAAM,GAAN,MAAM,CAAgC;IAE9C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;GAClB;EAID,OAAO,CAAC,QAAgB;IACtB,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IAClD,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,EAAE,IAAI,CAAC,MAAM,GAAG,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAA;IACzF,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;MACrB,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC;MACpB,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;KAC3B;IACD,IAAI,KAAK,CAAC,OAAO,KAAK,CAAC,EAAE;MACvB,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;MACnB,OAAO,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;KAC1B;IACD,QAAQ,IAAI,CAAC,IAAI,GAAG,CAAE,IAAI,EAAE,KAAK,CAAE,EAAC;GACrC;EAED,aAAa,CAAC,KAAW;IACvB,IAAI,KAAK,YAAY,IAAI,CAAC,MAAM,EAAE;MAChC,OAAO,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,OAAO,CAAA;KACvF;IACD,OAAO,KAAK,CAAC;GACd;EAED,IAAI,CAAC,KAAW;IACd,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,EAAE;GAC/E;EAED,IAAI,MAAM,KAAK,OAAO,IAAI,KAAK,IAAI,CAAC,IAAI,CAAA,EAAE;EAC1C,IAAI,OAAO,KAAK,OAAO,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAA,EAAE;EACpD,IAAI,OAAO,KAAK,OAAO,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAA,EAAE;EACpD,IAAI,MAAM;IACR,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;MAC5B,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC;QAAE,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAA;MAC3D,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAA;KACxD;IACD,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GACpB;CACF;AAED,MAAM,QAAS,SAAQ,QAAQ;EAC7B,YACE,MAAc,EACd,MAAc,EACd,WAAmB,CAAC;IAEpB,KAAK,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;GAC3C;EAED,OAAO,CAAC,MAAc,EAAE,MAAc,EAAE,QAAiB;IACvD,OAAO,IAAI,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;GAC/C;CACF;AAED,MAAM,KAAM,SAAQ,QAAQ;EAG1B,YACE,MAAc,EACd,MAAc,EACP,IAAc,EACd,OAAe,EACf,cAA6E,EAAE,EACtF,WAAmB,CAAC;IAEpB,KAAK,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;IALhC,SAAI,GAAJ,IAAI,CAAU;IACd,YAAO,GAAP,OAAO,CAAQ;IACf,gBAAW,GAAX,WAAW,CAAoE;GAIvF;EAED,OAAO,CAAC,MAAc,EAAE,MAAc,EAAE,QAAiB;IACvD,OAAO,IAAI,KAAK,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;GACvF;CACF;AAED,MAAM,UAAU;EAId,YACS,MAAc,EACd,IAAc,EACd,OAAe,EACf,KAAa;IAHb,WAAM,GAAN,MAAM,CAAQ;IACd,SAAI,GAAJ,IAAI,CAAU;IACd,YAAO,GAAP,OAAO,CAAQ;IACf,UAAK,GAAL,KAAK,CAAQ;IAPf,YAAO,GAAa,EAAE,CAAA;IACtB,gBAAW,GAAkE,EAAE,CAAC;GAOnF;EAEJ,IAAI,MAAM,KAAK,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAA,EAAE;EAC3C,IAAI,QAAQ,KAAK,OAAO,CAAC,CAAA,EAAE;EAC3B,IAAI,OAAO,KAAK,OAAO,IAAI,CAAC,MAAM,CAAA,EAAE;EACpC,IAAI,OAAO,KAAK,OAAO,IAAI,CAAC,MAAM,CAAA,EAAE;EACpC,IAAI,MAAM,KAAK,OAAO,CAAC,IAAI,CAAC,CAAA,EAAE;CAC/B;AAED;;;MAGa,cAAc;EASzB,YACU,MAAiB;IAAjB,WAAM,GAAN,MAAM,CAAW;IAR3B,UAAK,GAAe,IAAI,UAAU,EAAE,CAAC;IACrC,WAAM,GAAoB,EAAE,CAAC;IAC7B,cAAS,GAAoB,EAAE,CAAC;IAChC,cAAS,GAAwC,EAAE,CAAC;IAEpD,UAAK,GAAW,EAAE,CAAC;IAKjB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC;IAC5B,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAA;IACrD,MAAM,CAAC,UAAU,CAAC,GAAG;MACnB,IAAI,CAAC,QAAQ,EAAE,CAAC;MAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC1B,CAAA;IACD,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;GACrB;EAED,QAAQ,CAAC,MAAc,EAAE,IAAc;IACrC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC;MAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;IAC/C,IAAI,CAAC,UAAU,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;IAExF,IAAI,EAAC,WAAW,EAAE,gBAAgB,EAAE,MAAM,EAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAA;IAC3E,IAAI,MAAM,YAAY,QAAQ,EAAE;MAC9B,MAAM,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;MACpD,IAAI,QAAQ,CAAC;MACb,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;QAClB,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,WAAW,CAAC;QACpC,QAAQ,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAA;OAC5C;WAAM,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;QACzB,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,WAAW,GAAG,CAAC,CAAC;QACxC,QAAQ,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAA;OAC5C;WAAM;QACL,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,WAAW,GAAG,CAAC,CAAC;QACxC,QAAQ,GAAG;UACT,UAAU,CAAC,CAAC,CAAC;UACb,IAAI,CAAC,UAAU;UACf,UAAU,CAAC,CAAC,CAAC;SACd,CAAC;OACH;MAGD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC;KACjD;IAED,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;GACtC;;;;;EAMD,gBAAgB,CAAC,MAAc;IAC7B,IAAI,OAAO,GAAG,CAAC,CAAC;IAChB,IAAI,gBAAwB,CAAC;IAC7B,IAAI,WAAmB,CAAC;IACxB,IAAI,MAAqB,CAAC;IAC1B,KAAK,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,IAAK,IAAI,CAAC,MAA0B,CAAC,OAAO,EAAE,EAAE;MACnE,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC;MACzB,IAAI,OAAO,IAAI,MAAM,EAAE;QACrB,gBAAgB,GAAG,KAAK,CAAC,OAAO,GAAG,OAAO,GAAG,MAAM,CAAC;QACpD,WAAW,GAAG,CAAC,CAAC;QAChB,MAAM,GAAG,KAAK,CAAC;QACf,MAAM;OACP;KACF;IACD,OAAO;MACL,gBAAgB;MAChB,WAAW;MACX,MAAM;KACP,CAAA;GACF;EAED,IAAI,YAAY,KAAK,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,CAAA,EAAE;;;;;;;;EAS/C,eAAe,CAAC,MAAc,EAAE,KAAa,EAAE,KAAa;IAC1D,MAAM,MAAM,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;IAC/C,IAAI,KAAK,KAAK,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;MACpC,IAAI,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;MAC/C,IAAI,eAAe,KAAK,SAAS,IAAI,eAAe,CAAC,QAAQ,EAAE;QAC7D,MAAM,SAAS,GAAI,IAAI,CAAC,MAA0B,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QAC9D,eAAe,GAAG;UAChB,QAAQ,EAAE,KAAK;UACf,KAAK,EAAE,SAAS;UAChB,QAAQ,EAAE,SAAS,CAAC,QAAQ;SAC7B,CAAC;QACF,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,CAAA;OACzC;MAED,eAAe,CAAC,KAAK,CAAC,QAAQ,IAAI,MAAM,CAAC;MACzC,IAAI,eAAe,CAAC,KAAK,CAAC,OAAO,KAAK,CAAC,EAAE;QACvC,eAAe,CAAC,QAAQ,GAAG,IAAI,CAAC;QAEhC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;OAClC;KACF;GACF;EAED,IAAI,CAAC,SAAmB,EAAE,IAAY,EAAE,SAAkB;;;IAIxD,MAAM,OAAO,GAAG,EAAE,CAAC;IAEnB,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,GAAG,SAAS,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC;IAChF,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,KAAK,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;MACtD,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;QAClD,KAAK,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;UAC9C,IAAI,CAAC,KAAK,CAAC,EAAE;YACX,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC9C,MAAM;WACP;UACD,IAAI,OAAO,CAAC,CAAC,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;YAC5D,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;YACb,MAAM;WACP;SACF;OACF;WAAM;QACL,MAAM,SAAS,GAAG,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAEpD,IAAI,SAAS,KAAK,CAAC,CAAC;UAAE,CAAC,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;aAC3C;UACH,CAAC,IAAI,SAAS,CAAC,MAAM,GAAG,SAAS,GAAG,CAAC,CAAC;SACvC;OACF;;MAED,GAAG,EAAE,CAAA;MACL,IAAI,GAAG,GAAG,MAAM;QAAE,MAAM;KACzB;IAGD,OAAO,OAAO,CAAC;GAChB;EAED,IAAI;IACF,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;MAC7B,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAA+B,CAAC;MACtF,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;;MAG1C,IAAI,KAAK,CAAC,IAAI,KAAK,QAAQ,EAAE;QAC3B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;OAC7C;WAAM;QACL,IAAI,cAAc,GAAG,CAAC,CAAC;QACvB,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QACjC,IAAI,CAAC,EAAE,CAAC,QAAQ;UAAE,cAAc,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;UACpB,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE;YACpB,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,QAAQ,CAAC;WACxC;eAAM;YACL,EAAE,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;WAC9B;SACF;QACD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,WAAW,CAAC,MAAM,GAAG,cAAc,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;OACrF;MAED,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;MAC3B,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAE1B;GACF;EAED,IAAI;IACF,IAAI,IAAI,CAAC,YAAY,EAAE;MACrB,IAAI,CAAC,MAAM,EAAE,CAAC;MACd,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;KACjB;IACD,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;;MAG7B,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;;MAGpC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;MACxD,IAAI,QAAQ,CAAC;MACb,IAAI,OAAO,GAAG,GAAG,CAAC;;MAGlB,IAAI,MAAM,YAAY,KAAK,IAAI,MAAM,CAAC,IAAI,KAAK,WAAW,EAAE;;;;;;QAQ1D,MAAM,QAAQ,GAAG,EAAE,CAAC;QACpB,MAAM,iBAAiB,GAAyC,EAAE,CAAA;QAClE,KAAK,MAAM,CAAC,IAAI,MAAM,CAAC,WAAW,EAAE;UAClC,IAAI,CAAC,CAAC,QAAQ,EAAE;YACd,CAAC,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAA;YAC7B,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAA;WACvB;eAAM;YACL,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;WAC3B;SACF;;QAGD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,GAAG,QAAQ,CAAC,CAAA;;QAGhE,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;;;QAIlC,IAAI,iBAAiB,CAAC,MAAM,EAAE;;UAE5B,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE;YACtC,MAAM,MAAM,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC;;;YAIjD,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAC7B,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC;WAC1F;eAAM;YACL,OAAO,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC;YAC9C,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;WACrE;SACF;OAEF;WAAM;;QAEL,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;;QAEpD,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;OACnC;MAGD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,QAAoB,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;MAC7D,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC1B;GAEF;;;;EAKD,SAAS;IACP,IAAI,IAAI,CAAC,UAAU,EAAE;MACnB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;MAChB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;MAC9B,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;MACtD,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAA;KAC/C;SACI,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,KAAK,WAAW,CAAC,GAAG,EAAE;KAErD;SACI;KAEJ;GACF;;;;;;;EAQD,SAAS,CAAC,SAAwB;IAChC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC;MAAE,OAAO;IAC7D,IAAI,SAAS,CAAC,GAAG,KAAK,GAAG,KAAK,SAAS,CAAC,OAAO,IAAI,SAAS,CAAC,OAAO,CAAC,EAAE;MACrE,IAAI,CAAC,IAAI,EAAE,CAAA;MACX,OAAO;KACR;IACD,IAAI,SAAS,CAAC,GAAG,KAAK,GAAG,KAAK,SAAS,CAAC,OAAO,IAAI,SAAS,CAAC,OAAO,CAAC,EAAE;MACrE,IAAI,CAAC,IAAI,EAAE,CAAA;MACX,OAAO;KACR;IACD,IAAI,SAAS,CAAC,GAAG,KAAK,WAAW,EAAE;MACjC,IAAI,CAAC,SAAS,EAAE,CAAC;MACjB,OAAO;KACR;;;IAID,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE;MAC3E,IAAI,CAAC,IAAI,CAAC,YAAY;QAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,QAAoB,CAAC,CAAC;MAExE,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,KAAK,WAAW,CAAC,KAAK,IAAI,SAAS,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,IAAI,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;QACxH,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1D,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACtD,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,KAAK,WAAW;UAAE,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;OAC3F;WACI,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,KAAK,WAAW,CAAC,IAAI,IAAI,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;QAC5F,IAAI,CAAC,KAAK,IAAI,SAAS,CAAC,GAAG,CAAC;QAC5B,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;UAC3B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;UACvD,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;UAChB,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;UACtD,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,KAAK,WAAW;YAAE,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SAC3F;OACF;KACF;;SAEI,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,KAAK,WAAW,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;MACnG,IAAI,SAAS,CAAC,GAAG,KAAK,OAAO,EAAE;;QAE7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QAC5C,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAAA,CAAC;QACjC,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;OAC1B;WACI;QACH,IAAI,CAAC,IAAI,CAAC,YAAY;UACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QAEjD,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;OACxE;KACF;GACF;EAED,MAAM;IACJ,MAAM,MAAM,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAClF,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC1B,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAEvD,MAAM,aAAa,GAAG,IAAI,KAAK,CAC7B,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EACtC,IAAI,CAAC,UAAU,CAAC,MAAM,EACtB,IAAI,CAAC,UAAU,CAAC,IAAI,EACpB,IAAI,CAAC,UAAU,CAAC,OAAO,EACvB,IAAI,CAAC,UAAU,CAAC,WAAW,CAC5B,CAAC;IACF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,aAAa,CAAC;IAEnD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,aAAa,CAAC;IAC1D,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;IACpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACvB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;GACjB;EAED,QAAQ;IACN,IAAI,UAAU,GAAG,CAAC,CAAC;IACnB,OAAM,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;MAC/B,UAAU,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAA;KAC7C;IAED,IAAI,MAAM,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,UAAU,CAAC,CAAC;IAC5D,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;IACrD,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;IAEpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;MAC/C,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAkB,CAAC;MAC3C,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAkB,CAAC;MAC/C,IAAI,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE;QACxB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,EAAS,CAAC,CAAC,CAAC;QAC7C,CAAC,EAAE,CAAC;OACL;KACF;GACF;EAED,MAAM,CAAC,KAAa,EAAE,MAAc;IAClC,IAAI,GAAG,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC;IACjC,IAAI,IAAI,GAAgC,EAAC,KAAK,EAAE,EAAE,EAAC,CAAA;IAEnD,IAAI,OAAO,GAAG,CAAC,CAAC;IAChB,IAAI,UAAkB,CAAC;IACvB,IAAI,UAAU,GAAW,CAAC,CAAC;IAC3B,KAAK,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE;MAC9C,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC;MACzB,IAAI,OAAO,IAAI,KAAK,EAAE;QACpB,UAAU,GAAG,KAAK,CAAC,OAAO,GAAG,OAAO,GAAG,KAAK,CAAC;QAC7C,UAAU,GAAG,CAAC,CAAC;QACf,MAAM;OACP;KACF;IAED,IAAI,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,KAAK,EAAE;MACrF,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,UAAU,EAAE,KAAK,GAAG,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;KAC5F;IAED,IAAI,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC,UAAU,EAAE,UAAU,GAAG,MAAM,CAAC,CAAC;IACxG,OAAO,GAAG,UAAU,CAAC,MAAM,CAAC;IAC5B,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;IACvB,KAAK,IAAI,CAAC,GAAG,UAAU,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;MACxD,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;MAC3B,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC;MACzB,IAAI,YAAY,CAAC,KAAK,CAAC,IAAI,KAAK,YAAY,KAAK,EAAE;QACjD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,OAAO,GAAG,KAAK,CAAC,OAAO,EAAE,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC;OACrE;MACD,IAAI,OAAO,IAAI,MAAM,EAAE;QACrB,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAC,OAAO,GAAG,OAAO,GAAG,MAAM,CAAC,EAAE,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;QAC3G,MAAM;OACP;MACD,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;KAC9D;IAED,IAAI,OAAO,KAAK,MAAM,EAAE;MACtB,OAAO;QACL,GAAG,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC;QAC7B,IAAI;OACL,CAAA;KACF;IACD,OAAO;MACL,GAAG;MACH,IAAI;KACL,CAAC;GACH;EAED,IAAI,MAAM;IACR,IAAI,WAAW,GAAG,CAAC,CAAC;IACpB,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE;MAC/B,WAAW,IAAI,KAAK,CAAC,MAAM,CAAC;KAC7B;IACD,OAAO,WAAW,CAAC;GACpB;EAED,IAAI;IACF,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC;GACxC;EAEO,cAAc,CAAC,KAAe;IACpC,IAAI,YAAY,CAAC,KAAK,CAAC,EAAE;MACvB,OAAO,IAAI,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;KACtC;;IAED,IAAI,KAAK,YAAY,QAAQ,EAAE;MAC7B,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,GAAC,KAAK,CAAC,OAAO,CAAC,CAAC;KAC3E;SAAM;MACL,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,GAAC,KAAK,CAAC,OAAO,CAAC,CAAC;KACxE;GAEF;;;SCjjBa,UAAU,CAAC,KAAa,EAAE,IAAmB,EAAE,UAA4B;EACzF,IAAI,gBAAgB,CAAC;EACrB,QAAO,IAAI;IACT,KAAK,CAAC;MAAE,gBAAgB,GAAG,CAAC,CAAC;MAAC,MAAM;IACpC,KAAK,CAAC;MAAE,gBAAgB,GAAG,CAAC,CAAC;MAAC,MAAM;IACpC,KAAK,CAAC;MAAE,gBAAgB,GAAG,CAAC,CAAC;MAAC,MAAM;IACpC,KAAK,CAAC;MAAE,gBAAgB,GAAG,EAAE,CAAC;MAAC,MAAM;;;IAGrC;MACE,OAAO;GACV;EAED,IAAI,IAAI,GAAG,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;EAE/B,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;EAExB,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;EAChC,IAAI,OAAO,GAAG,KAAK,GAAG,OAAO,CAAC;EAC9B,IAAI,gBAAgB,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,gBAAgB,IAAI,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;EAC5F,IAAI,WAAW,GAAG,EAAE,CAAC;EAErB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,EAAE,CAAC,EAAG,EAAE;IAC1C,OAAO,IAAI,CAAC,CAAC;IACb,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACnC,IAAI,OAAO,IAAI,CAAC;MAAE,OAAO,IAAI,CAAC,CAAC;GAChC;EAED,IAAI,QAAQ,GAAG,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAC7D,WAAW,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC,EAAE,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAE/D,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;EACnC,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IAC9B,WAAW,GAAG,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;IACzD,IAAI,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;MAC7B,OAAO,IAAI,CAAC,CAAC;MACb,WAAW,GAAG,EAAE,CAAC;KAClB;GACF;EACD,IAAI,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;EACxF,IAAI,OAAO,KAAK,CAAC,EAAE;IACjB,IAAI,WAAW,KAAK,EAAE;MAAE,QAAQ,GAAG,CAAC,CAAC;;MAChC,QAAQ,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,WAAW,CAAC,KAAK,CAAC,OAAO,CAAE,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;GACrG;EACD,IAAI,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;EAElE,IAAI,OAAO,GAAG,IAAI;IAClB,MAAM;IACN,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,WAAW,EAAE,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,gBAAgB,IAAI,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;EAE/H,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,WAAW,EAAE,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,gBAAgB,IAAI,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1J,IAAI,GAAG,GAAG,EAAE,CAAC;EACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;IACtC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,GAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;GAClD;EAED,IAAI,UAAU,KAAK,QAAQ;IAAE,GAAG,CAAC,OAAO,EAAE,CAAC;EAC3C,IAAI,KAAK,KAAK,CAAC;IAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAE7B,OAAO,GAAG,CAAC;AACb;;AC5DA,MAAM,YAAY,GAAG,iyEAAiyE;;MCUzyE,SAAS;;;;;;;;;;;;;;;;IA8vCpB,UAAK,GAAG,CAAC,GAAe;MACtB,GAAG,CAAC,cAAc,EAAE,CAAC;MAErB,IAAI,cAAc,GAAG,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;MAC/G,IAAI,cAAc,KAAK,CAAC,CAAC;QAAE,cAAc,IAAI,CAAC,CAAC;MAC/C,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE;QAAE,cAAc,IAAI,IAAI,CAAC;MAEtD,IAAI,GAAG,CAAC,OAAO,IAAI,GAAG,CAAC,QAAQ;QAAE,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;WACvF,IAAI,GAAG,CAAC,QAAQ;QAAE,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;WAC7D,IAAI,GAAG,CAAC,OAAO;QAAE,cAAc,IAAI,EAAE,CAAC;MAC3C,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA;MAElE,IAAI,IAAI,CAAC,UAAU,GAAG,cAAc,GAAG,CAAC;QAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;WACzD,IAAI,IAAI,CAAC,UAAU,GAAG,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC;QAAE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;;QACxL,IAAI,CAAC,UAAU,IAAI,cAAc,CAAC;KACxC,CAAA;IAED,wBAAmB,GAAG,CAAC,GAAkB;MACvC,GAAG,CAAC,cAAc,EAAE,CAAC;MAErB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;KACzB,CAAA;;;cAvvCqB,CAAC;;;;;sBAiBW,UAAU,CAAC,KAAK;2BAER,CAAC;wBAEP,KAAK;uBAEV,EAAE;yBAEE,EAAE;wBAEJ,KAAK;wBAYN,IAAI;sBAQN,IAAI;sBAQJ,KAAK;oBAQR,EAAE;wBAQE,EAAE;+BAOQ,SAAS,CAAC,GAAG;6BAMlB,IAAI;kBAalC,EAAE;2BAQ2B,KAAK;uBAUT,KAAK;yBAQJ,CAAC;wBASF,CAAC;gBAgBiB,QAAQ;oBAcD,UAAU;uBAQpC,CAAC;mBASF,EAAE;;EAjL/B,IAAI,UAAU,KAAK,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE;EAChD,IAAI,UAAU,CAAC,CAAS,IAAI,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;;;EA+N1C,iBAAiB;IACf,IAAI,CAAC,IAAI,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;IAExD,IAAI,CAAC,cAAc,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC;IAC/C,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;IAC3B,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;GAC7B;EAED,gBAAgB;IACd,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;GAC1C;;;;;;;;;;EAeD,MAAM,UAAU,CAAC,IAAU;IACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAEzB,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;IAChC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;IAC/B,MAAM,CAAC,MAAM,GAAG,CAAC,KAAK;MACpB,IAAI,CAAC,IAAI,GAAG,IAAI,UAAU,CAAE,KAAK,CAAC,MAAc,CAAC,MAAM,CAAC,CAAC;MACzD,IAAI,CAAC,cAAc,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC;KAChD,CAAA;GACF;;;;;;;EASD,MAAM,QAAQ;IACZ,IAAI,IAAI,CAAC,IAAI,IAAI,SAAS;MAAE,OAAO;IACnC,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;GACnC;;;;;;;EASD,MAAM,aAAa,CAAC,aAAqB;IACvC,IAAI,aAAa,GAAG,CAAC;MAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;;MACtC,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC;IACrC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;GAC3C;;;;;;;EASD,MAAM,iBAAiB,CAAC,iBAAyB,EAAE,GAAY;IAC7D,IAAI,GAAG,EAAE;MACP,IAAI,UAAU,GAAG,CAAC,CAAC;MACnB,IAAI,GAAG,IAAI,CAAC;QAAE,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;MAC/C,IAAI,CAAC,MAAM,GAAG,iBAAiB,GAAG,UAAU,CAAC;MAC7C,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;KACpB;SAAM;MACL,IAAI,CAAC,MAAM,GAAG,iBAAiB,CAAC;KACjC;IAED,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAC,CAAC,CAAC;GAChE;;;;;;EAQD,MAAM,YAAY,CAAC,YAAgF;IACjG,IAAI,CAAC,SAAS,mCAAO,IAAI,CAAC,SAAS,GAAK,YAAY,CAAC,CAAC;IACtD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;GAC/C;;;;;;;;EAUD,MAAM,QAAQ,CAAC,QAAgB,EAAE,MAAc;IAC7C,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;GACrD;;;;;EAOD,MAAM,eAAe;IACnB,OAAO,IAAI,CAAC,YAAY,CAAC;GAC1B;;;;;;;;;;;EAaD,MAAM,aAAa,CACjB,IAAY,EACZ,UAAsB,EACtB,KAAwB,EACxB,eAA+B,EAC/B,YAA+B;IAE/B,IAAI,SAAS,CAAC;IACd,IAAI;MACF,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,UAAU,EAAE,eAAe,EAAE,YAAY,CAAC,CAAC;KAChF;IAAC,OAAM,CAAC,EAAE;MACT,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;KAChB;IAED,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;IACxH,OAAO,IAAI,CAAC,aAAa,CAAC;GAC3B;;;;;;EASD,YAAY;IACV,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,YAAY,EAAE,aAAa,EAAE,YAAY,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC;IAC9F,MAAM,KAAK,GAAG,UAAU,GAAG,YAAY,CAAC;IAExC,MAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,EAAE,QAAQ,GAAG,YAAY,CAAC,CAAC;IAC7E,MAAM,KAAK,GAAG,SAAS,CAAC,GAAG,CAAC;IAC5B,MAAM,WAAW,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;IAEzC,MAAM,KAAK,GAAiB,EAAE,CAAC;IAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;MACjC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,YAAY,EAAE,CAAC,CAAC,GAAC,CAAC,IAAI,YAAY,CAAC,CAAC,CAAC;KACpE;IAED,MAAM,QAAQ,GAAG,EAAE,CAAC;IACpB,MAAM,SAAS,GAAG,EAAE,CAAC;IACrB,MAAM,SAAS,GAAG,EAAE,CAAC;IACrB,IAAI,YAAY,GAAG,CAAC,CAAC,CAAC;IACtB,KAAK,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE,EAAE;MAC7C,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC;QAAE,MAAM;;MAG7B,MAAM,IAAI,GAAG,KAAK,GAAG,OAAO,GAAG,YAAY,CAAC;MAC5C,MAAM,QAAQ,GAAG,EAAE,CAAC;MACpB,MAAM,SAAS,GAAG,EAAE,CAAC;MACrB,MAAM,QAAQ,GAAG,EAAE,CAAC;MACpB,IAAI,KAAK,GAAW,IAAI,CAAC,mBAAmB,CAAC;MAC7C,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,WAAW,CAAC,cAAc,EAAE,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;;MAGxF,KAAK,MAAM,CAAC,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,EAAE;QAC1D,IAAI,GAAW,CAAC;;QAEhB,MAAM,SAAS,GAAG,EAAE,CAAC;QACrB,IAAI,kCAAkC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE;UACrE,KAAK,GAAG,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;SAClC;aAAM;UACL,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;UAC7B,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC;SAClC;QAED,IAAI,WAAW,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;UAAE,GAAG,GAAG,GAAG,GAAG,KAAK,CAAC;SAAE;aACtD;UAAE,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;SAAE;QAG/D,IAAI,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC;UAAE,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACjD,IAAI,QAAQ,GAAG,aAAa,KAAK,aAAa,GAAG,CAAC;UAAE,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC9E,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,GAAG,QAAQ,EAAE;UAC/C,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UACzB,YAAY,GAAG,OAAO,CAAC;SACxB;QACD,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,GAAG,QAAQ,IAAI,IAAI,GAAG,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG;UAAE,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACnI,KAAK,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,WAAW,EAAE;UACtC,IAAI,KAAK,IAAI,IAAI,GAAG,QAAQ,IAAI,IAAI,GAAG,QAAQ,GAAG,GAAG,EAAE;YACrD,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACxB,MAAM;WACP;SACF;;;QAID,IAAI,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACxD,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,IAAI,IAAI,CAAC,UAAU,EAAE;UACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtC,IAAI,QAAQ,GAAG,EAAE,CAAC;YAClB,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,IAAI,YAAY,IAAI,YAAY,GAAG,CAAC;cAAE,QAAQ,IAAI,QAAQ,CAAC;YAChF,IAAI,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;cAAE,QAAQ,IAAI,SAAS,CAAC;YAC/F,IAAI,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;cAClC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE;gBAC/C,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM;kBAC5D,QAAQ,IAAI,WAAW,CAAC;eAC3B;mBACI,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,KAAK,IAAI,GAAG,QAAQ,EAAE;gBACjD,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ;kBAAE,QAAQ,IAAI,WAAW,CAAC;eAC3D;mBACI,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,KAAK,IAAI,GAAG,QAAQ,EAAE;gBAC/C,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC;kBAAE,QAAQ,IAAI,WAAW,CAAC;eACzF;;gBACI,QAAQ,IAAI,WAAW,CAAC;aAC9B;YACD,QAAQ,CAAC,IAAI,CAAC,+BAAuB,CAAC,EAAE,KAAK,EAAE,QAAQ,IAAG,MAAM,CAAC,CAAC,CAAC,CAAQ,CAAC,CAAC;WAC9E;SACF;QAED,IAAI,IAAI,CAAC,UAAU;UAAE,QAAQ,CAAC,IAAI,CAAC,+BAAuB,IAAI,GAAG,QAAQ,EAAE,KAAK,EAAE,UAAU,IAAI,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,QAAQ,GAAG,EAAE,CAAC,IAAG,QAAQ,CAAQ,CAAC,CAAA;QAChK,IAAI,IAAI,CAAC,YAAY;UAAE,SAAS,CAAC,IAAI,CAAC,+BAAuB,IAAI,GAAG,QAAQ,EAAE,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,IAAG,KAAK,CAAQ,CAAC,CAAC;QAC1H,IAAI,IAAI,CAAC,UAAU;UAAE,QAAQ,CAAC,IAAI,CAAC,+BAAuB,IAAI,GAAG,QAAQ,EAAE,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,IAAG,GAAG,CAAQ,CAAC,CAAC;OACtH;MAED,IAAI,IAAI,CAAC,UAAU;QAAE,QAAQ,CAAC,IAAI,EAChC,WAAK,KAAK,EAAE,SAAS,IAAI,YAAY,KAAK,OAAO,GAAG,WAAW,GAAG,EAAE,CAAC,IAAG,QAAQ,CAAO,EACvF,CAAA;MAEF,IAAI,IAAI,CAAC,UAAU,EAAE;QACnB,SAAS,CAAC,IAAI,EACZ,WAAK,KAAK,EAAE,SAAS,IAAI,YAAY,KAAK,OAAO,GAAG,WAAW,GAAG,EAAE,CAAC,IAAG,QAAQ,CAAO,EACvF,CAAC;OACJ;WAAM;QACL,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;OACpB;MAED,IAAI,IAAI,CAAC,YAAY;QAAE,SAAS,CAAC,IAAI,EACnC,WAAK,KAAK,EAAE,UAAU,IAAI,YAAY,KAAK,OAAO,GAAG,WAAW,GAAG,EAAE,CAAC,IAAG,SAAS,CAAO,EACzF,CAAA;KAEH;;IAGD,OAAO,SAAS,CAAC,MAAM,GAAG,QAAQ,EAAE;MAClC,QAAQ,CAAC,IAAI,CAAC,WAAK,KAAK,EAAC,SAAS,EAAC,KAAK,EAAE,EAAC,aAAa,EAAE,MAAM,EAAC,IAAE,oBAAc,CAAM,CAAC,CAAC;MACzF,SAAS,CAAC,IAAI,CAAC,WAAK,KAAK,EAAC,SAAS,EAAC,KAAK,EAAE,EAAC,aAAa,EAAE,MAAM,EAAC,IAAE,oBAAc,CAAM,CAAC,CAAC;MAC1F,SAAS,CAAC,IAAI,CAAC,WAAK,KAAK,EAAC,UAAU,EAAC,KAAK,EAAE,EAAC,aAAa,EAAE,MAAM,EAAC,IAAE,oBAAc,CAAM,CAAC,CAAC;KAC5F;;IAGD,MAAM,UAAU,GAAG,EAAE,CAAC;IACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;MACjC,UAAU,CAAC,IAAI,CAAC,WAAK,KAAK,EAAE,WAAW,IAAI,YAAY,KAAK,CAAC,GAAG,WAAW,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,EAAC,aAAa,EAAE,MAAM,EAAC,IAAG,IAAI,GAAG,CAAC,KAAK,GAAG,CAAC,GAAG,YAAY,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAO,CAAC,CAAA;KAC5L;;IAID,MAAM,gBAAgB,GAAG,EAAE,CAAC;IAC5B,MAAM,gBAAgB,GAAG,EAAE,CAAC;IAC5B,MAAM,kBAAkB,GAAG,EAAE,CAAC;IAE9B,MAAM,WAAW,GAAG,CAAC,MAAe,EAAE,KAAK,GAAG,CAAC,EAAE,KAAc;MAC7D,IAAI,MAAM,CAAC,GAAG,GAAG,KAAK,IAAI,MAAM,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,EAAE;QAClF,IAAI,MAAM,CAAC,UAAU,IAAI,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,WAAW,EAAE;UACvD,KAAK,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE;YAAE,WAAW,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;SAChF;QACD,OAAO;OACR;MAAA,CAAC;MAEF,IAAI,KAAK,KAAK,IAAI,CAAC,WAAW;QAAE,OAAO;;MAGvC,MAAM,CAAC,GAAG,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;MAC3C,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC;;;;;MAMzC,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC;MAE1E,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,UAAU,CAAC;MAEzE,MAAM,QAAQ,GAAG;QACf,CAAC,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;QACnB,CAAC,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;QACnB,CAAC,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;OACpB,CAAA;MAED,MAAM,UAAU,GAAG,CAAC,KAAa,EAAE,MAAc,MAC7C,eACE,WAAW,EACT,CAAC,GAAe;UACd,IAAI,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,QAAQ;YAAE,OAAO;UACnF,IAAI,IAAI,CAAC,kBAAkB,KAAK,SAAS,EAAE;YACzC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;WAChC;UACD,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAChC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;YAC1E,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;YAC1E,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAA;YACjE,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,SAAS,iCAAK,MAAM,KAAE,UAAU,EAAE,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,IAAI,IAAE,EAAE,CAAC,CAAC;YAE1K,UAAU,CAAC,QAAO,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAA,EAAC,EAAE,EAAE,CAAC,CAAC;WACxD;SACF,EAEH,YAAY,EACV;UACE,IAAI,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,MAAM;YACtE,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA;SACrE,EAEH,OAAO,EACL,CAAC,GAAe;;UACd,IAAI,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,QAAQ,EAAE;YAC1E,IAAI,CAAA,MAAA,MAAA,MAAA,QAAQ,CAAC,YAAY,EAAE,CAAC,UAAU,0CAAE,aAAa,0CAAE,aAAa,0CAAE,OAAO,MAAK,aAAa,EAAE;cAC/F,QAAQ,CAAC,YAAY,EAAE,CAAC,KAAK,EAAE,CAAC;aACjC;YACD,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;YAC1E,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;YAC1E,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAA;YACjE,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,SAAS,iCAAK,MAAM,KAAE,UAAU,EAAE,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,IAAI,IAAE,EAAE,CAAC,CAAC;WAC3K;eAAM;YACL,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YACpE,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,OAAO,GAAG,EAAE,EAAE,CAAC,CAAC;YAC/E,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,OAAO,GAAG,EAAE,EAAE,CAAC,CAAC;WAChF;UAAA,CAAC;SACH,EAEH,KAAK,EAAC,QAAQ,EACd,MAAM,EAAE;kBACF,CAAC,CAAC,GAAG,MAAM,IAAI,MAAM;gBACvB,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC,GAAG,MAAM,IAAI,MAAM;gBAClC,CAAC,GAAG,KAAK,IAAI,MAAM,GAAG,MAAM;gBAC5B,IAAI,CAAC,YAAY,GAAG,KAAK,IAAI,MAAM,GAAG,MAAM;gBAC5C,IAAI,CAAC,YAAY,GAAG,KAAK,IAAI,CAAC,CAAC,GAAG,MAAM,IAAI,MAAM;gBAClD,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC,GAAG,MAAM,IAAI,MAAM;gBAClC,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,CAAC,IAAI,MAAM;kBACpC,CAAC,CAAC,GAAC,CAAC,GAAG,MAAM,IAAI,MAAM;aAC5B,EAAE,IAAI,EAAE,MAAM,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,MAAM,EAAC,MAAM,GACtE,CACH,CAAA;MAEH,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;MAClE,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;MACjF,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;;MAEhE,IAAI,MAAM,CAAC,UAAU,IAAI,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,WAAW,EAAE;QACvD,KAAK,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE;UAAE,WAAW,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;OAChF;;KAEF,CAAA;IAED,KAAK,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE;MAChD,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;KAC3B;;IAGD,MAAM,UAAU,GAAG,WAAK,OAAO,EAAE,OAAO,IAAI,CAAC,YAAY,GAAG,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,EAAE,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,YAAY,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,EAAE,IAAG,gBAAgB,CAAO,CAAA;IACrO,MAAM,UAAU,GAAG,WAAK,OAAO,EAAE,OAAO,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,EAAE,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,EAAE,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,EAAE,IAAG,gBAAgB,CAAO,CAAA;IACnQ,MAAM,YAAY,GAAG,WAAK,OAAO,EAAE,OAAO,IAAI,CAAC,YAAY,GAAG,EAAE,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,EAAE,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,YAAY,GAAG,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,EAAE,IAAG,kBAAkB,CAAO,CAAA;IACjO,OAAO;MACL,SAAS;MACT,SAAS;MACT,QAAQ;MACR,UAAU;MACV,UAAU;MACV,UAAU;MACV,YAAY;KACb,CAAA;GACF;EAED,WAAW;IACT,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,YAAY,EAAE,aAAa,EAAE,MAAM,EAAE,YAAY,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC;;IAEtG,MAAM,WAAW,GAAG;MAClB,KAAK,EAAE,CAAC;MACR,aAAa,EAAE,CAAC;KACjB,CAAC;;IAEF,KAAK,IAAI,IAAI,GAAG,UAAU,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE;MAC7E,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,YAAY,CAAC,GAAG,CAAC,CAAC;MAC7E,IAAI,IAAI,GAAG,CAAC;MACZ,IAAI,IAAI,GAAG,CAAC;QAAE,WAAW,CAAC,KAAK,IAAI,CAAC,CAAC;;QAChC,WAAW,CAAC,aAAa,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;KAClD;;;IAID,MAAM,cAAc,GAKd,EAAE,CAAC;IACT,KAAK,IAAI,CAAC,GAAG,WAAW,CAAC,KAAK,EAAE,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,QAAQ,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;MAC7F,MAAM,SAAS,GAAG,SAAS,CAAC;MAC5B,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;MACxB,IAAI,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC;MAC9B,IAAI,CAAC,IAAI,WAAW,CAAC,KAAK;QAAE,WAAW,IAAI,YAAY,GAAG,WAAW,CAAC,aAAa,CAAC;MACpF,IAAI,KAAK,CAAC,GAAG,GAAG,WAAW,IAAI,CAAC,EAAE;;QAEhC,SAAS;OACV;MACD,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,IAAI,YAAY,CAAC,CAAC;MAEjE,IAAI,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC;MAC1B,IAAI,SAAS,GAAG,QAAQ;QAAE,SAAS,IAAI,CAAC,SAAS,GAAG,QAAQ,IAAI,YAAY,CAAC;;MAE7E,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,GAAG,WAAW,CAAC,CAAC,GAAG,CAAC;MAEtF,cAAc,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAC,CAAC,CAAC;MACzF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QAC1B,SAAS,IAAI,CAAC,CAAC;QACf,cAAc,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC;OACvF;KAGF;IACD,cAAc,CAAC,GAAG,EAAE,CAAC;IAErB,IAAI,SAAS,GAAG,EAAE,CAAC;IACnB,IAAI,SAAS,GAAG,EAAE,CAAC;IACnB,IAAI,QAAQ,GAAG,EAAE,CAAC;IAClB,IAAI,UAAU,GAAG,EAAE,CAAC;IAEpB,MAAM,gBAAgB,GAAG,EAAE,CAAC;IAC5B,MAAM,gBAAgB,GAAG,EAAE,CAAC;IAC5B,MAAM,kBAAkB,GAAG,EAAE,CAAC;IAE9B,KAAK,MAAM,EAAC,KAAK,EAAE,IAAI,EAAE,SAAS,EAAC,IAAI,cAAc,EAAE;MACrD,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;QAChB,UAAU,CAAC,IAAI,CAAC,WAAK,KAAK,EAAC,WAAW,EAAC,KAAK,EAAE,EAAC,aAAa,EAAE,MAAM,EAAC,SAAU,CAAC,CAAA;QAChF,SAAS,CAAC,IAAI,CAAC,WAAK,KAAK,EAAC,WAAW,EAAC,KAAK,EAAE,EAAC,aAAa,EAAE,MAAM,EAAC,SAAU,CAAC,CAAA;QAC/E,SAAS,CAAC,IAAI,CAAC,WAAK,KAAK,EAAC,WAAW,EAAC,KAAK,EAAE,EAAC,aAAa,EAAE,MAAM,EAAC,SAAU,CAAC,CAAA;QAC/E,QAAQ,CAAC,IAAI,CAAC,WAAK,KAAK,EAAC,WAAW,EAAC,KAAK,EAAE,EAAC,aAAa,EAAE,MAAM,EAAC,SAAU,CAAC,CAAA;QAC9E,SAAS;OACV;MACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,YAAY,EAAE;QAClD,MAAM,SAAS,GAAG,KAAK,GAAG,CAAC,CAAC;QAC5B,MAAM,OAAO,GAAG,EAAE,CAAC;QACnB,MAAM,QAAQ,GAAG,EAAE,CAAC;QACpB,MAAM,OAAO,GAAG,EAAE,CAAC;QACnB,IAAI,YAAY,GAAG,CAAC,CAAC,CAAC;QACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;UAC5D,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;UACpB,MAAM,QAAQ,GAAG,KAAK,GAAG,CAAC,CAAC;UAE3B,IAAI,GAAW,CAAC;UAChB,IAAI,KAAa,CAAC;UAClB,IAAI,kCAAkC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE;YACrE,KAAK,GAAG,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;WAClC;eAAM;YAAE,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC;WAAE;UAE5C,IAAI,WAAW,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YAAE,GAAG,GAAG,GAAG,GAAG,KAAK,CAAC;WAAE;eACtD;YAAE,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;WAAE;;UAG/D,MAAM,SAAS,GAAG,EAAE,CAAC;UACrB,IAAI,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC;YAAE,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;UACjD,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,aAAa,KAAK,aAAa,GAAG,CAAC;YAAE,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;UAC7E,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,QAAQ,EAAE;YACxC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACzB,YAAY,GAAG,SAAS,CAAC;WAC1B;UACD,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,QAAQ,IAAI,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG;YAAE,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;;;UAIrH,IAAI,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;UACxD,IAAI,QAAQ,GAAG,EAAE,CAAC;UAClB,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;cACtC,IAAI,QAAQ,GAAG,EAAE,CAAC;cAClB,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,IAAI,YAAY,IAAI,YAAY,GAAG,CAAC;gBAAE,QAAQ,IAAI,QAAQ,CAAC;cAChF,IAAI,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;gBAAE,QAAQ,IAAI,SAAS,CAAC;cAC/F,IAAI,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;gBAClC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE;kBAC/C,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM;oBAC5D,QAAQ,IAAI,WAAW,CAAC;iBAC3B;qBACI,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,QAAQ,EAAE;kBACzC,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ;oBAAE,QAAQ,IAAI,WAAW,CAAC;iBAC3D;qBACI,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,QAAQ,EAAE;kBACvC,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC;oBAAE,QAAQ,IAAI,WAAW,CAAC;iBACzF;;kBACI,QAAQ,IAAI,WAAW,CAAC;eAC9B;cACD,QAAQ,CAAC,IAAI,CAAC,+BAAuB,CAAC,EAAE,KAAK,EAAE,QAAQ,IAAG,MAAM,CAAC,CAAC,CAAC,CAAQ,CAAC,CAAC;aAC9E;WACF;UAED,IAAI,IAAI,CAAC,UAAU;YAAE,OAAO,CAAC,IAAI,CAAC,+BAAuB,QAAQ,EAAE,KAAK,EAAE,UAAU,IAAI,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,QAAQ,GAAG,EAAE,CAAC,IAAG,QAAQ,CAAQ,CAAC,CAAA;UACxJ,IAAI,IAAI,CAAC,YAAY;YAAE,QAAQ,CAAC,IAAI,CAAC,+BAAuB,QAAQ,EAAE,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,IAAG,KAAK,CAAQ,CAAC,CAAC;UAClH,IAAI,IAAI,CAAC,UAAU;YAAE,OAAO,CAAC,IAAI,CAAC,+BAAuB,QAAQ,EAAE,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,IAAG,GAAG,CAAQ,CAAC,CAAC;SAC9G;QAED,UAAU,CAAC,IAAI,EACb,WAAK,KAAK,EAAE,WAAW,IAAI,YAAY,KAAK,SAAS,GAAG,WAAW,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,EAAC,aAAa,EAAE,MAAM,EAAC,IAAG,IAAI,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAO,EACnK,CAAA;QAEF,IAAI,IAAI,CAAC,UAAU;UAAE,QAAQ,CAAC,IAAI,EAChC,WAAK,KAAK,EAAE,SAAS,IAAI,YAAY,KAAK,SAAS,GAAG,WAAW,GAAG,EAAE,CAAC,IAAG,OAAO,CAAO,EACxF,CAAA;QAEF,IAAI,IAAI,CAAC,UAAU,EAAE;UACnB,SAAS,CAAC,IAAI,EACZ,WAAK,KAAK,EAAE,SAAS,IAAI,YAAY,KAAK,SAAS,GAAG,WAAW,GAAG,EAAE,CAAC,IAAG,OAAO,CAAO,EACxF,CAAC;SACJ;aAAM;UACL,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACpB;QAED,IAAI,IAAI,CAAC,YAAY;UAAE,SAAS,CAAC,IAAI,EACnC,WAAK,KAAK,EAAE,UAAU,IAAI,YAAY,KAAK,SAAS,GAAG,WAAW,GAAG,EAAE,CAAC,IAAG,QAAQ,CAAO,EAC1F,CAAA;OAEH;MAED,MAAM,WAAW,GAAG,CAAC,MAAe,EAAE,KAAK,GAAG,CAAC,EAAE,KAAc;QAC7D,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,CAAC;QACzD,MAAM,WAAW,GAAG,KAAK,GAAG,YAAY,CAAC;QAEzC,IAAI,MAAM,CAAC,GAAG,GAAG,KAAK,IAAI,MAAM,CAAC,KAAK,GAAG,KAAK,GAAG,SAAS,GAAG,YAAY,EAAE;UACzE,IAAI,MAAM,CAAC,UAAU,IAAI,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,WAAW,EAAE;YACvD,KAAK,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE;cAAE,WAAW,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;WAChF;UACD,OAAO;SACR;QAAA,CAAC;QAEF,IAAI,KAAK,KAAK,IAAI,CAAC,WAAW;UAAE,OAAO;QAEvC,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAChD,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QAE1D,MAAM,CAAC,GAAG,CAAC,SAAS,GAAG,WAAW,IAAI,YAAY,CAAC;QACnD,MAAM,CAAC,GAAG,CAAC,OAAO,GAAG,WAAW,IAAI,YAAY,CAAC;QAEjD,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,GAAG,SAAS,GAAG,CAAC,IAAI,YAAY,CAAC,CAAC;QAE/D,MAAM,UAAU,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,GAAG,KAAK,IAAI,YAAY,CAAC,GAAG,SAAS,CAAC,CAAC;;;QAIhF,MAAM,QAAQ,GAAG;UACf,CAAC,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;UACnB,CAAC,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;UACnB,CAAC,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;SACpB,CAAC;QAEF,MAAM,UAAU,GAAG,CAAC,KAAa,EAAE,MAAc,MAC/C,eACE,WAAW,EACT,CAAC,GAAe;YACd,IAAI,IAAI,CAAC,kBAAkB,KAAK,SAAS,EAAE;cACzC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;aAChC;YACD,IAAI,IAAI,CAAC,kBAAkB,EAAE;cAC3B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;cAChC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;cAC1E,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;cAC1E,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAA;cACjE,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,SAAS,iCAAK,MAAM,KAAE,UAAU,EAAE,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,IAAI,IAAE,EAAE,CAAC,CAAC;cAE1K,UAAU,CAAC,QAAO,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAA,EAAC,EAAE,EAAE,CAAC,CAAC;aACxD;WACF,EAEH,YAAY,EAAE,MAAM,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,EACtF,KAAK,EAAC,QAAQ,EACd,MAAM,EAAE;kBACF,CAAC,CAAC,GAAG,UAAU,IAAI,MAAM;gBAC3B,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC,GAAG,UAAU,IAAI,MAAM;gBACtC,CAAC,GAAG,KAAK,IAAI,UAAU,GAAG,MAAM;gBAChC,IAAI,CAAC,YAAY,GAAG,KAAK,IAAI,UAAU,GAAG,MAAM;gBAChD,IAAI,CAAC,YAAY,GAAG,KAAK,IAAI,CAAC,CAAC,GAAG,UAAU,IAAI,MAAM;gBACtD,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC,GAAG,UAAU,IAAI,MAAM;gBACtC,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC,IAAI,MAAM;kBACxC,CAAC,CAAC,GAAC,CAAC,GAAG,UAAU,IAAI,MAAM;aAChC,EAAE,IAAI,EAAE,MAAM,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,MAAM,EAAC,MAAM,GACtE,CACH,CAAA;QAED,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;QAClE,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;QACjF,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;;QAEhE,IAAI,MAAM,CAAC,UAAU,IAAI,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,WAAW,EAAE;UACvD,KAAK,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE;YAAE,WAAW,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;SAChF;OAEF,CAAA;MAED,KAAK,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE;QAChD,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;OAC3B;KACF;IAED,OAAO,SAAS,CAAC,MAAM,GAAG,QAAQ,EAAE;MAClC,UAAU,CAAC,IAAI,CAAC,WAAK,KAAK,EAAC,WAAW,IAAE,oBAAc,CAAM,CAAC,CAAA;MAC7D,QAAQ,CAAC,IAAI,CAAC,WAAK,KAAK,EAAC,WAAW,IAAE,oBAAc,CAAM,CAAC,CAAC;MAC5D,SAAS,CAAC,IAAI,CAAC,WAAK,KAAK,EAAC,WAAW,IAAE,oBAAc,CAAM,CAAC,CAAC;MAC7D,SAAS,CAAC,IAAI,CAAC,WAAK,KAAK,EAAC,WAAW,IAAE,oBAAc,CAAM,CAAC,CAAC;KAC9D;IAED,MAAM,UAAU,GAAG,WAAK,OAAO,EAAE,OAAO,IAAI,CAAC,YAAY,GAAG,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,EAAE,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,YAAY,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,EAAE,IAAG,gBAAgB,CAAO,CAAA;IACrO,MAAM,UAAU,GAAG,WAAK,OAAO,EAAE,OAAO,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,EAAE,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,EAAE,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,EAAE,IAAG,gBAAgB,CAAO,CAAA;IACnQ,MAAM,YAAY,GAAG,WAAK,OAAO,EAAE,OAAO,IAAI,CAAC,YAAY,GAAG,EAAE,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,EAAE,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,YAAY,GAAG,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,EAAE,IAAG,kBAAkB,CAAO,CAAA;IAEjO,OAAO;MACL,SAAS;MACT,SAAS;MACT,QAAQ;MACR,UAAU;MACV,UAAU;MACV,UAAU;MACV,YAAY;KACb,CAAA;GAEF;;;;;;;;;EAUD,IAAI,CAAC,GAAkB;IACrB,IAAK,GAAG,CAAC,MAAsB,CAAC,SAAS,KAAK,KAAK;MAAE,OAAO;IAC5D,MAAM,qBAAqB,GAAG;MAC5B,SAAS,EAAE;QACT,IAAI,CAAC,iBAAiB,CACpB,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM;YAC3D,IAAI,CAAC,cAAc,CAAC,MAAM;YAC1B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,CAAA;OACrC;MACD,OAAO,EAAE,QAAQ,IAAI,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,CAAA,EAAE;MACtH,UAAU,EAAE;QACV,IAAI,CAAC,iBAAiB,CACpB,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM;YAC3C,IAAI,CAAC,cAAc,CAAC,MAAM;YAC1B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;OACrB;MACD,SAAS,EAAE,QAAQ,IAAI,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA,EAAE;KACzF,CAAA;IACD,IAAI,qBAAqB,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;MAClC,GAAG,CAAC,cAAc,EAAE,CAAC;;MAErB,IAAI,IAAI,CAAC,cAAc,CAAC,UAAU;QAAE,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;;MAEjE,qBAAqB,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;;MAEjC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC;QACzE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAA;WAChF,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY;QACxD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAA;;MAEjE,IAAI,GAAG,CAAC,QAAQ,EAAE;QAChB,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM;UAAE,IAAI,CAAC,YAAY,CAAC,EAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC;;UAC3E,IAAI,CAAC,YAAY,CAAC,EAAC,GAAG,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC;OAC5C;WAAM;QACL,IAAI,CAAC,YAAY,CAAC,EAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC,CAAA;OAC1D;KACF;SAAM,IAAI,CAAC,GAAG,CAAC,OAAO,IAAI,GAAG,CAAC,OAAO,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,EAAE;;MAE1D,GAAG,CAAC,cAAc,EAAE,CAAC;MACrB,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;MACvC,WAAW,CAAC,IAAI,CAAC,CAAC;KACnB;SAAM;MACL,IAAI,IAAI,CAAC,QAAQ,KAAK,UAAU;QAAE,OAAO;MACzC,GAAG,CAAC,cAAc,EAAE,CAAC;MACrB,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;KACpC;GACF;;;;;;;;;;;;EAaD,YAAY,CACV,IAAY,EACZ,UAAsB,EACtB,eAA+B,EAC/B,YAA+B;IAE/B,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC;MAAE,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;IAC7F,QAAO,UAAU;MACf,KAAK,UAAU,CAAC,OAAO;QACrB,MAAM,GAAG,GAAG,QAAQ,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QAC3E,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE;UACrB,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACxB;QACD,MAAM,GAAG,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,eAAe,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QACvG,IAAI,YAAY,KAAK,QAAQ;UAAE,GAAG,CAAC,OAAO,EAAE,CAAC;QAC7C,OAAO,GAAG,CAAC;MACb,KAAK,UAAU,CAAC,KAAK;QACnB,OAAO,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,eAAe,EAAE,YAAY,CAAC,CAAA;MACpE,KAAK,UAAU,CAAC,IAAI;QAClB,IAAI,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC;UAAE,MAAM,IAAI,KAAK,CAAC,4DAA4D,CAAC,CAAA;aAC1G;UACH,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;SAC9E;MACH,KAAK,UAAU,CAAC,KAAK,CAAC;MACtB;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;KACrD;GACF;;;;;;;EAQD,MAAM,eAAe;IACnB,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC;IAC7E,IAAI,CAAC,aAAa;MAChB,MAAM,IAAI,CAAC,aAAa,CACtB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,UAAU,EACf,KAAK,KAAK,CAAC;UACP,SAAS;UACT,CAAE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAE,EAChD,IAAI,CAAC,eAAe,EACpB,IAAI,CAAC,YAAY,CAAC,CAAC;GACxB;;;;EAKD,OAAO;IACL,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;IAEjH,IAAI,gBAAgB,CAAC;IACrB,IAAI;MACF,gBAAgB;QACd,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,YAAY,CAAC;WAC1F,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC3D;IAAC,OAAO,CAAC,EAAE;MACV,IAAI,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC;QAAE,gBAAgB,GAAG,EAAE,CAAC;;QACnD,gBAAgB,GAAG,CAAC,CAAC,OAAO,CAAC;KACnC;IAED,IAAI,aAAa,CAAC;IAClB,IAAI,IAAI,CAAC,YAAY,EAAE;MACrB,MAAM,YAAY,GAAG,CAAC,GAAW;QAC/B,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC;UAChB,KAAK,EAAE,CAAC;UACR,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC;UAClI,QAAQ,EAAE,CAAC,CAAC;UACZ,MAAM,EAAE,CAAC,CAAC;SACX,CAAC,CAAA;QACF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAA;OAC1E,CAAA;MACD,aAAa,IACX,cAAQ,QAAQ,EAAE,CAAC,GAAG,KAAK,YAAY,CAAE,GAAG,CAAC,MAA4B,CAAC,KAAK,CAAC,IAC7E,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,IACvB,cAAQ,KAAK,EAAE,CAAC,IAAG,KAAK,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAU,CACnD,CACM,CACV,CAAA;KACF;IAED,QACE,WAAK,KAAK,EAAC,KAAK,EACd,YAAY,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,EACtD,YAAY,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,EACtD,WAAW,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAC9C,SAAS,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EAE1C,QAAQ,EAAC,GAAG,EACZ,SAAS,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAElC,WAAK,EAAE,EAAC,SAAS,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAE,EAAC,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAC,SAAU,EAC7G,WAAK,KAAK,EAAC,YAAY,IACpB,UAAU,CACP,EACL,IAAI,CAAC,UAAU;MACd,WAAK,KAAK,EAAC,SAAS,IAClB,WAAK,KAAK,EAAC,WAAW,EAAC,KAAK,EAAE,EAAC,QAAQ,EAAE,UAAU,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,IAAI,KAAK,UAAU,GAAG,MAAM,GAAG,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,KAAK,QAAQ,GAAG,GAAG,GAAG,GAAG,EAAC,IAC7J,UAAU,CACP,EACN,WAAK,KAAK,EAAC,MAAM,IACd,QAAQ,CACL,CACF;QACN,IAAI,EACL,IAAI,CAAC,UAAU;MACd,WAAK,KAAK,EAAC,SAAS,IAClB,WAAK,KAAK,EAAC,WAAW,EAAC,KAAK,EAAE,EAAC,QAAQ,EAAE,UAAU,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,IAAI,KAAK,UAAU,GAAG,MAAM,GAAG,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,KAAK,QAAQ,GAAG,GAAG,GAAG,GAAG,EAAC,IAC7J,UAAU,CACP,EACN,WAAK,KAAK,EAAC,MAAM,IACd,SAAS,CACN,CACF;QACN,IAAI,EACL,IAAI,CAAC,YAAY;MAChB,WAAK,KAAK,EAAC,WAAW,IACpB,WAAK,KAAK,EAAC,WAAW,EAAC,KAAK,EAAE,EAAC,QAAQ,EAAE,UAAU,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,IAAI,KAAK,UAAU,GAAG,MAAM,GAAG,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,KAAK,QAAQ,GAAG,GAAG,GAAG,GAAG,EAAC,IAC7J,YAAY,CACT,EACN,WAAK,KAAK,EAAC,MAAM,IACd,SAAS,CACN,CACF;QACJ,IAAI,EACP,IAAI,CAAC,YAAY;MAChB,WAAK,KAAK,EAAC,MAAM,eAEf,aAAO,IAAI,EAAC,MAAM,EAAC,QAAQ,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,WAAW,GAAI,GAAG,CAAC,MAA2B,CAAC,KAAK,GAAI,EACnG,cAAQ,QAAQ,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,UAAU,GAAI,GAAG,CAAC,MAA4B,CAAC,KAAY,IACzF,cAAQ,KAAK,EAAE,UAAU,CAAC,KAAK,mBAAuB,EACtD,cAAQ,KAAK,EAAE,UAAU,CAAC,IAAI,YAAgB,EAC9C,cAAQ,KAAK,EAAE,UAAU,CAAC,OAAO,cAAkB,EACnD,cAAQ,KAAK,EAAE,UAAU,CAAC,KAAK,YAAgB,CACxC,EACR,CAAC,CAAC,UAAU,CAAC,OAAO,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI;QACpE,cAAQ,QAAQ,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAE,GAAG,CAAC,MAA4B,CAAC,KAAK,CAAQ,IACxG,cAAQ,KAAK,EAAC,GAAG,aAAgB,EACjC,cAAQ,KAAK,EAAC,GAAG,cAAiB,EAClC,cAAQ,KAAK,EAAC,GAAG,cAAiB,EAClC,cAAQ,KAAK,EAAC,GAAG,cAAiB,CAC3B;QACT,cAAQ,QAAQ,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,YAAY,GAAI,GAAG,CAAC,MAA4B,CAAC,KAAY,IAC3F,cAAQ,KAAK,EAAC,KAAK,iBAAoB,EACvC,cAAQ,KAAK,EAAC,QAAQ,oBAAuB,CACtC;OACV;UACC,IAAI,EACN,cAAQ,OAAO,EAAE,MAAM,IAAI,CAAC,eAAe,EAAE,aAAiB,EAC9D,aAAK,WACC,gBAAgB,kBAAc,aAAa,CAC7C;QACN,IAAI,CACF,EACN;GACH;;;;;;EAOD,UAAU;IACR,MAAM,EACJ,SAAS,EACT,QAAQ,EACR,SAAS,EACT,UAAU,EACV,UAAU,EACV,UAAU,EACV,YAAY,EACb,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IAGvB,QACE,WAAK,KAAK,EAAC,KAAK,EACd,YAAY,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,EACtD,YAAY,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,EACtD,WAAW,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAC9C,SAAS,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EAE1C,QAAQ,EAAC,GAAG,EACZ,SAAS,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAElC,WAAK,EAAE,EAAC,SAAS,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAE,EAAC,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAC,SAAU,EAC7G,WAAK,KAAK,EAAC,YAAY,IACpB,UAAU,CACP,EACL,IAAI,CAAC,UAAU;MACd,WAAK,KAAK,EAAC,SAAS,IAClB,WAAK,KAAK,EAAC,WAAW,EAAC,KAAK,EAAE,EAAC,QAAQ,EAAE,UAAU,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,IAAI,KAAK,UAAU,GAAG,MAAM,GAAG,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,KAAK,QAAQ,GAAG,GAAG,GAAG,GAAG,EAAC,IAC7J,UAAU,CACP,EACN,WAAK,KAAK,EAAC,MAAM,IACd,QAAQ,CACL,CACF;QACN,IAAI,EACL,IAAI,CAAC,UAAU;MACd,WAAK,KAAK,EAAC,SAAS,IAClB,WAAK,KAAK,EAAC,WAAW,EAAC,KAAK,EAAE,EAAC,QAAQ,EAAE,UAAU,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,IAAI,KAAK,UAAU,GAAG,MAAM,GAAG,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,KAAK,QAAQ,GAAG,GAAG,GAAG,GAAG,EAAC,IAC7J,UAAU,CACP,EACN,WAAK,KAAK,EAAC,MAAM,IACd,SAAS,CACN,CACF;QACN,IAAI,EACL,IAAI,CAAC,YAAY;MAChB,WAAK,KAAK,EAAC,WAAW,IACpB,WAAK,KAAK,EAAC,WAAW,EAAC,KAAK,EAAE,EAAC,QAAQ,EAAE,UAAU,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,IAAI,KAAK,UAAU,GAAG,MAAM,GAAG,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,KAAK,QAAQ,GAAG,GAAG,GAAG,GAAG,EAAC,IAC7J,YAAY,CACT,EACN,WAAK,KAAK,EAAC,MAAM,IACd,SAAS,CACN,CACF;QACJ,IAAI,CACJ,EACN;GACH;;;;;EAMD,cAAc,CAAC,GAAQ;IACrB,IAAK,GAAG,CAAC,MAAsB,CAAC,EAAE,KAAK,eAAe;MAAE,OAAO;IAC/D,IAAK,GAAG,CAAC,MAAsB,CAAC,aAAa,CAAC,OAAO,IAAI,KAAK;MAAE,OAAO;IACvE,MAAM,eAAe,GAAI,GAAG,CAAC,MAAsB,CAAC,aAAa,CAAC,SAAS,CAAC;IAC5E,IAAI,CAAC,eAAe;MAAE,OAAO;IAC7B,IAAI,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC;MAAE,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC;SAC1E,IAAI,eAAe,CAAC,QAAQ,CAAC,SAAS,CAAC;MAAE,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC;SAC7E,IAAI,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC;MAAE,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC;;MAC7E,OAAO;IAEZ,IAAI,IAAI,CAAC,WAAW,KAAK,WAAW,CAAC,GAAG,EAAE;MACxC,IAAI,CAAC,aAAa,GAAG;QACnB,IAAI,EAAE,QAAQ,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;QACrE,GAAG,EAAE,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;OAC1D,CAAA;KACF;SACI;MACH,IAAI,CAAC,aAAa,GAAG;QACnB,IAAI,EAAE,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;QAC1D,GAAG,EAAE,CAAC,CAAC;OACR,CAAA;KACF;GAEF;EAED,YAAY,CAAC,GAAQ;IACnB,IAAI,IAAI,CAAC,aAAa,KAAK,IAAI;MAAE,OAAO;IAExC,IAAK,GAAG,CAAC,MAAsB,CAAC,aAAa,CAAC,OAAO,IAAI,KAAK;MAAE,OAAO;IACvE,MAAM,eAAe,GAAI,GAAG,CAAC,MAAsB,CAAC,aAAa,CAAC,SAAS,CAAC;IAC5E,IAAI,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC;MAAE,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC;SAC1E,IAAI,eAAe,CAAC,QAAQ,CAAC,SAAS,CAAC;MAAE,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC;SAC7E,IAAI,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC;MAAE,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC;;MAC7E,OAAO;IAEZ,IAAI,MAAM,CAAC;IACX,IAAI,IAAI,CAAC,WAAW,KAAK,WAAW,CAAC,GAAG,EAAE;MACxC,MAAM,GAAG;QACP,IAAI,EAAE,QAAQ,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;QACrE,GAAG,EAAE,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;OAC1D,CAAA;KACF;SACI;MACH,MAAM,GAAG;QACP,IAAI,EAAE,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;QAC1D,GAAG,EAAE,CAAC,CAAC;OACR,CAAA;KACF;IAED,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,GAAG,EAAE,EAAE;MACzF,IAAI,CAAC,YAAY,CAAC;QAChB,KAAK,EAAE,MAAM,CAAC,IAAI;QAClB,QAAQ,EAAE,MAAM,CAAC,GAAG;QACpB,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI;QAC5B,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG;OAC/B,CAAC,CAAA;KACH;SAAM;MACL,IAAI,CAAC,YAAY,CAAC;QAChB,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI;QAC9B,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG;QAChC,GAAG,EAAE,MAAM,CAAC,IAAI;QAChB,MAAM,EAAE,MAAM,CAAC,GAAG;OACnB,CAAC,CAAA;KACH;IAED,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC1B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC;IAC1B,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;IAEtB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAC,CAAC,CAAC;IAC/D,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAE9C,IAAI,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE;MACpC,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;MAC7B,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;KAC5B;GACF;EAiCD,MAAM;IACJ,IAAI,GAAG,CAAC;IACR,IAAI,IAAI,CAAC,eAAe;MAAE,GAAG,GAAG,IAAI,CAAC,UAAU,EAAE,CAAA;;MAC3C,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAA;IAE1B,QACE,WAAK,KAAK,EAAC,oBAAoB,IAC5B,GAAG,CACA,EACP;GACF;EAED,qBAAqB,CAAC,GAAe;IACnC,IAAI,GAAG,CAAC,IAAI,KAAK,YAAY,EAAE;MAC5B,GAAG,CAAC,MAAsB,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,EAAC,OAAO,EAAE,KAAK,EAAC,CAAC,CAAC;KACrF;SACI;MACF,GAAG,CAAC,MAAsB,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;KAC7E;GACF;;;;;;","names":[],"sources":["./src/components/hex-editor/interfaces.ts","./src/components/hex-editor/editController.tsx","./src/components/hex-editor/floatConverter.ts","./src/components/hex-editor/hex-editor.css?tag=hex-editor","./src/components/hex-editor/hex-editor.tsx"],"sourcesContent":["export interface IRegion {\r\n  start: number;\r\n  end: number;\r\n  name?: string;\r\n  description?: string;\r\n  color?: string;\r\n  subRegions?: IRegion[];\r\n}\r\n\r\nexport enum EditingMode {\r\n  ASCII,\r\n  BYTE,\r\n  BIT\r\n}\r\nexport enum SearchType {\r\n  ASCII,\r\n  BYTE,\r\n  INTEGER,\r\n  FLOAT\r\n}\r\nexport enum NonLetter {\r\n  DOT = \"\\u2022\",\r\n  CROSS = \"\\u2573\",\r\n  FULL_BLOCK = \"\\u2588\",\r\n  LIGHT_SHADE = \"\\u2591\",\r\n  MEDIUM_SHADE = \"\\u2592\",\r\n  DARK_SHADE = \"\\u2593\",\r\n  DASH = \"-\",\r\n  PLUS = \"+\"\r\n}\r\n\r\nexport type Endianness = 'big' | 'little';","import { HexEditor } from './hex-editor';\r\nimport { forceUpdate } from '@stencil/core';\r\nimport { EditingMode } from './interfaces';\r\n\r\ntype editType = \"insert\" | \"overwrite\";\r\n// type piece = {offset: number, length: number, source: \"origin\", editNum: 0};\r\n// type addedPiece = {offset: number, type: editType, length: number, source: \"added\", editNum: number};\r\n// type inprogress = {offset: number, type: editType, length: number, source: \"inprogress\", index: number, content: number[], editNum: number};\r\ntype anyPiece = Original | Added | InProgress;\r\ntype existingPiece = Existing;\r\n\r\nfunction isInprogress(piece: anyPiece): piece is InProgress {\r\n  if (piece instanceof InProgress) return true;\r\n  else return false;\r\n}\r\n\r\nfunction last<T>(arr: T[]) {\r\n  if (arr.length > 0) return arr[arr.length - 1];\r\n  return undefined;\r\n}\r\n\r\nabstract class Existing {\r\n  public editNum: number;\r\n  public self: Existing | Existing[];\r\n\r\n  constructor(\r\n    public offset: number,\r\n    public length: number,\r\n    public modified: number = 0,\r\n    private myType: typeof Original | typeof Added\r\n  ) {\r\n    this.self = this;\r\n  }\r\n\r\n  abstract makeNew(offset: number, length: number, modified?: number): Existing\r\n\r\n  splitAt(position: number) {\r\n    const left = this.makeNew(this.mOffset, position);\r\n    const right = this.makeNew(this.offset + position, this.length - position, this.modified)\r\n    if (left.length === 0) {\r\n      this.self = [right];\r\n      return [undefined, right];\r\n    }\r\n    if (right.mLength === 0) {\r\n      this.self = [left];\r\n      return [left, undefined];\r\n    }\r\n    return (this.self = [ left, right ])\r\n  }\r\n\r\n  isContinuedBy(other: this): other is this {\r\n    if (other instanceof this.myType) {\r\n      return this.mLength + this.mOffset === other.mOffset && this.editNum === other.editNum\r\n    }\r\n    return false;\r\n  }\r\n\r\n  join(other: this) {\r\n    return (this.self = this.makeNew(this.mOffset, this.mLength + other.mLength));\r\n  }\r\n\r\n  get isSelf() { return this === this.self }\r\n  get mOffset() { return this.offset + this.modified }\r\n  get mLength() { return this.length - this.modified }\r\n  get pieces() {\r\n    if (Array.isArray(this.self)) {\r\n      if (this.self.length === 1) return [...this.self[0].pieces]\r\n      return [...this.self[0].pieces, ...this.self[1].pieces]\r\n    }\r\n    return [this.self];\r\n  }\r\n}\r\n\r\nclass Original extends Existing {\r\n  constructor(\r\n    offset: number,\r\n    length: number,\r\n    modified: number = 0\r\n  ) {\r\n    super(offset, length, modified, Original);\r\n  }\r\n\r\n  makeNew(offset: number, length: number, modified?: number): Original {\r\n    return new Original(offset, length, modified);\r\n  }\r\n}\r\n\r\nclass Added extends Existing {\r\n  public self: Added | Added[];\r\n\r\n  constructor(\r\n    offset: number,\r\n    length: number,\r\n    public type: editType,\r\n    public editNum: number,\r\n    public consumption: {startMod: number, consumed: boolean, piece: existingPiece}[] = [],\r\n    modified: number = 0\r\n  ){\r\n    super(offset, length, modified, Added);\r\n  }\r\n\r\n  makeNew(offset: number, length: number, modified?: number): Added {\r\n    return new Added(offset, length, this.type, this.editNum, this.consumption, modified);\r\n  }\r\n}\r\n\r\nclass InProgress {\r\n  public content: number[] = []\r\n  public consumption: {startMod: number, consumed: boolean, piece: existingPiece}[] = [];\r\n\r\n  constructor(\r\n    public offset: number,\r\n    public type: editType,\r\n    public editNum: number,\r\n    public index: number,\r\n  ) {}\r\n\r\n  get length() { return this.content.length }\r\n  get modified() { return 0 }\r\n  get mLength() { return this.length }\r\n  get mOffset() { return this.offset }\r\n  get pieces() { return [this] }\r\n}\r\n\r\n/**\r\n * controls the editing of values in the hex editor\r\n */\r\nexport class EditController {\r\n  original: Uint8Array;\r\n  added: Uint8Array = new Uint8Array();\r\n  pieces: Array<anyPiece> = [];\r\n  undoStack: Array<anyPiece> = [];\r\n  redoStack: Array<[Existing, number, anyPiece]> = [];\r\n  inProgress: InProgress;\r\n  chunk: string = '';\r\n\r\n  constructor(\r\n    private parent: HexEditor\r\n  ) {\r\n    this.original = parent.file;\r\n    this.pieces = [new Original(0, this.original.length)]\r\n    window['rollback'] = () => {\r\n      this.rollback();\r\n      console.log(this.pieces);\r\n    }\r\n    window['ec'] = this;\r\n  }\r\n\r\n  initEdit(offset: number, type: editType) {\r\n    if (this.redoStack.length > 0) this.rollback();\r\n    this.inProgress = new InProgress(this.added.length, type, this.undoStack.length + 1, -1)\r\n\r\n    let {targetIndex, targetSlicePoint, target} = this.getPieceAtOffset(offset)\r\n    if (target instanceof Existing) {\r\n      const splitParts = target.splitAt(targetSlicePoint);\r\n      let toInsert;\r\n      if (!splitParts[0]) {\r\n        this.inProgress.index = targetIndex;\r\n        toInsert = [this.inProgress, splitParts[1]]\r\n      } else if (!splitParts[1]) {\r\n        this.inProgress.index = targetIndex + 1;\r\n        toInsert = [splitParts[0], this.inProgress]\r\n      } else {\r\n        this.inProgress.index = targetIndex + 1;\r\n        toInsert = [\r\n          splitParts[0],\r\n          this.inProgress,\r\n          splitParts[1]\r\n        ];\r\n      }\r\n\r\n\r\n      this.pieces.splice(targetIndex, 1, ...toInsert);\r\n    }\r\n\r\n    this.undoStack.push(this.inProgress);\r\n  }\r\n\r\n  /**\r\n   * gets the piece at an offset\r\n   * @param offset\r\n   */\r\n  getPieceAtOffset(offset: number): {targetSlicePoint: number, targetIndex: number, target: existingPiece} {\r\n    let tracker = 0;\r\n    let targetSlicePoint: number;\r\n    let targetIndex: number;\r\n    let target: existingPiece;\r\n    for (const [i, piece] of (this.pieces as existingPiece[]).entries()) {\r\n      tracker += piece.mLength;\r\n      if (tracker >= offset) {\r\n        targetSlicePoint = piece.mLength - tracker + offset;\r\n        targetIndex = i;\r\n        target = piece;\r\n        break;\r\n      }\r\n    }\r\n    return {\r\n      targetSlicePoint,\r\n      targetIndex,\r\n      target\r\n    }\r\n  }\r\n\r\n  get isInProgress() { return !!this.inProgress }\r\n\r\n  /**\r\n   * targets the piece next to the inProgress piece, if it exists, and\r\n   * modifies its length/offset by amount if the inProgress type is\r\n   * set to 'overwrite'.\r\n   *\r\n   * @param amount - the amount to modify the target piece's length by\r\n   */\r\n  modifyNextPiece(amount: number, index: number, piece?: Added) {\r\n    const target = piece ? piece : this.inProgress;\r\n    if (index !== this.pieces.length - 1) {\r\n      let lastConsumption = last(target.consumption);\r\n      if (lastConsumption === undefined || lastConsumption.consumed) {\r\n        const nextPiece = (this.pieces as existingPiece[])[index + 1];\r\n        lastConsumption = {\r\n          consumed: false,\r\n          piece: nextPiece,\r\n          startMod: nextPiece.modified\r\n        };\r\n        target.consumption.push(lastConsumption)\r\n      }\r\n\r\n      lastConsumption.piece.modified -= amount;\r\n      if (lastConsumption.piece.mLength === 0) {\r\n        lastConsumption.consumed = true;\r\n\r\n        this.pieces.splice(index + 1, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  find(searchArr: number[], from: number, maxLength?: number) {\r\n    // Boyer-Moore string search algorithm:\r\n    // https://en.wikipedia.org/wiki/Boyer%E2%80%93Moore_string-search_algorithm\r\n\r\n    const results = [];\r\n\r\n    let myChunk = this.render(from, maxLength ? maxLength : this.length - from).out;\r\n    let inf = 0;\r\n    for (let i = searchArr.length; i < myChunk.length; i++) {\r\n      if (myChunk[i] === searchArr[searchArr.length - 1]) {\r\n        for (let j = searchArr.length - 1; j >= 0; j--) {\r\n          if (j === 0) {\r\n            results.push(i + from - searchArr.length + 1);\r\n            break;\r\n          }\r\n          if (myChunk[i - (searchArr.length - j)] !== searchArr[j - 1]) {\r\n            i += (j - 1);\r\n            break;\r\n          }\r\n        }\r\n      } else {\r\n        const searchIdx = searchArr.lastIndexOf(myChunk[i]);\r\n\r\n        if (searchIdx === -1) i += searchArr.length - 1;\r\n        else {\r\n          i += searchArr.length - searchIdx - 2;\r\n        }\r\n      }\r\n      // JUUUST to be sure there's no infinite loop\r\n      inf++\r\n      if (inf > 100000) break;\r\n    }\r\n\r\n\r\n    return results;\r\n  }\r\n\r\n  redo() {\r\n    if (this.redoStack.length > 0) {\r\n      const [neighbor, startMod, toAdd] = this.redoStack.pop() as [Existing, number, Added];\r\n      const idx = this.pieces.indexOf(neighbor);\r\n      // console.log(idx);\r\n\r\n      if (toAdd.type === 'insert') {\r\n        this.pieces.splice(idx, 0, ...toAdd.pieces);\r\n      } else {\r\n        let partialConsume = 0;\r\n        let lp = last(toAdd.consumption);\r\n        if (!lp.consumed) partialConsume = 1;\r\n        if (!isNaN(startMod)) {\r\n          if (!lp.piece.isSelf) {\r\n            lp.piece.pieces[0].modified = startMod;\r\n          } else {\r\n            lp.piece.modified = startMod;\r\n          }\r\n        }\r\n        this.pieces.splice(idx, toAdd.consumption.length - partialConsume, ...toAdd.pieces);\r\n      }\r\n\r\n      this.undoStack.push(toAdd);\r\n      forceUpdate(this.parent);\r\n\r\n    }\r\n  }\r\n\r\n  undo() {\r\n    if (this.isInProgress) {\r\n      this.commit();\r\n      this.chunk = '';\r\n    }\r\n    if (this.undoStack.length > 0) {\r\n\r\n      // get the latest undo\r\n      const target = this.undoStack.pop();\r\n\r\n      // get the first piece of that undo step\r\n      const targetIdx = this.pieces.indexOf(target.pieces[0]);\r\n      let neighbor;\r\n      let lastMod = NaN;\r\n\r\n      // determine type of operation\r\n      if (target instanceof Added && target.type === 'overwrite') {\r\n        // if type was overwrite, then there are more steps necessary\r\n        // due to the potential to consume other pieces,\r\n        // all of which will need to be restored\r\n\r\n\r\n        // restore all pieces that have been FULLY consumed\r\n        // store those that have only been partially consumed\r\n        const restored = [];\r\n        const partiallyConsumed: (typeof Added.prototype.consumption) = []\r\n        for (const t of target.consumption) {\r\n          if (t.consumed) {\r\n            t.piece.modified = t.startMod\r\n            restored.push(t.piece)\r\n          } else {\r\n            partiallyConsumed.push(t);\r\n          }\r\n        }\r\n\r\n        // put restored pieces back while removing target\r\n        this.pieces.splice(targetIdx, target.pieces.length, ...restored)\r\n\r\n        // store the neighbor\r\n        neighbor = this.pieces[targetIdx];\r\n\r\n        // due to not \"rolling back\" every undo, the stored piece might actually be multiple\r\n        // pieces. This is kept track of with the piece's 'self' variable.\r\n        if (partiallyConsumed.length) {\r\n          // store the modified value of the partially consumed piece for redo\r\n          if (!partiallyConsumed[0].piece.isSelf) {\r\n            const pieces = partiallyConsumed[0].piece.pieces;\r\n\r\n            // we only need to modify the first one because the others should have been\r\n            // taken care of by other undo operations (in theory)\r\n            lastMod = pieces[0].modified;\r\n            pieces[0].modified = partiallyConsumed[0].startMod - partiallyConsumed[0].piece.modified;\r\n          } else {\r\n            lastMod = partiallyConsumed[0].piece.modified;\r\n            partiallyConsumed[0].piece.modified = partiallyConsumed[0].startMod;\r\n          }\r\n        }\r\n\r\n      } else {\r\n        // if the type was insert then the piece can simply be extracted without issue\r\n        this.pieces.splice(targetIdx, target.pieces.length);\r\n        // store the neighbor\r\n        neighbor = this.pieces[targetIdx];\r\n      }\r\n\r\n\r\n      this.redoStack.push([neighbor as Existing, lastMod, target]);\r\n      forceUpdate(this.parent);\r\n    }\r\n\r\n  }\r\n\r\n  // pressing backspace will be handled differently depending on:\r\n  // whether something is in-progress, and whether the editingMode of the\r\n  // parent is 'byte'/'ascii' or 'bit'\r\n  backSpace() {\r\n    if (this.inProgress) {\r\n      this.chunk = '';\r\n      this.inProgress.content.pop();\r\n      this.parent.setCursorPosition(this.parent.cursor - 1);\r\n      this.modifyNextPiece(1, this.inProgress.index)\r\n    }\r\n    else if (this.parent.editingMode === EditingMode.BIT) {\r\n\r\n    }\r\n    else {\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * builds the edit\r\n   *\r\n   * @param {KeyboardEvent} keyStroke\r\n   * @memberof EditController\r\n   */\r\n  buildEdit(keyStroke: KeyboardEvent) {\r\n    if (!this.parent.cursor || this.parent.cursor === -1) return;\r\n    if (keyStroke.key === 'Z' && (keyStroke.metaKey || keyStroke.ctrlKey)) {\r\n      this.redo()\r\n      return;\r\n    }\r\n    if (keyStroke.key === 'z' && (keyStroke.metaKey || keyStroke.ctrlKey)) {\r\n      this.undo()\r\n      return;\r\n    }\r\n    if (keyStroke.key === 'Backspace') {\r\n      this.backSpace();\r\n      return;\r\n    }\r\n\r\n    // ascii and byte modes are effectively the same in terms of editing\r\n    // binary editing is very different, so it is handled in the else statement\r\n    if ([EditingMode.ASCII, EditingMode.BYTE].includes(this.parent.editingMode)) {\r\n      if (!this.isInProgress)\r\n          this.initEdit(this.parent.cursor, this.parent.editType as editType);\r\n\r\n      if (this.parent.editingMode === EditingMode.ASCII && keyStroke.key.length === 1 && /[\\u0000-\\u00FF]/.test(keyStroke.key)) {\r\n        this.inProgress.content.push(keyStroke.key.charCodeAt(0));\r\n        this.parent.setCursorPosition(this.parent.cursor + 1);\r\n        if (this.inProgress.type === 'overwrite') this.modifyNextPiece(-1, this.inProgress.index);\r\n      }\r\n      else if (this.parent.editingMode === EditingMode.BYTE && /^[a-fA-F0-9]$/.test(keyStroke.key)) {\r\n        this.chunk += keyStroke.key;\r\n        if (this.chunk.length === 2) {\r\n          this.inProgress.content.push(parseInt(this.chunk, 16));\r\n          this.chunk = '';\r\n          this.parent.setCursorPosition(this.parent.cursor + 1);\r\n          if (this.inProgress.type === 'overwrite') this.modifyNextPiece(-1, this.inProgress.index);\r\n        }\r\n      }\r\n    }\r\n    // valid binary editing commands are 0, 1, and Enter\r\n    else if (this.parent.editingMode === EditingMode.BIT && ['0', '1', 'Enter'].includes(keyStroke.key)) {\r\n      if (keyStroke.key === 'Enter') {\r\n        // enter inserts a blank byte\r\n        this.initEdit(this.parent.cursor, 'insert');\r\n        this.inProgress.content.push(0);;\r\n        this.commit();\r\n        forceUpdate(this.parent);\r\n      }\r\n      else {\r\n        if (!this.isInProgress)\r\n          this.initEdit(this.parent.cursor, 'overwrite');\r\n\r\n        this.parent.setCursorPosition(this.parent.cursor, this.parent.bit + 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  commit() {\r\n    const newArr = new Uint8Array(this.added.length + this.inProgress.content.length);\r\n    newArr.set(this.added, 0);\r\n    newArr.set(this.inProgress.content, this.added.length);\r\n\r\n    const newAddedPiece = new Added(\r\n      newArr.length - this.inProgress.length,\r\n      this.inProgress.length,\r\n      this.inProgress.type,\r\n      this.inProgress.editNum,\r\n      this.inProgress.consumption\r\n    );\r\n    this.pieces[this.inProgress.index] = newAddedPiece;\r\n\r\n    this.undoStack[this.undoStack.length - 1] = newAddedPiece;\r\n    this.added = newArr;\r\n    this.inProgress = null;\r\n    this.chunk = '';\r\n  }\r\n\r\n  rollback() {\r\n    let chopLength = 0;\r\n    while(this.redoStack.length > 0) {\r\n      chopLength += this.redoStack.pop()[2].length\r\n    }\r\n\r\n    let newArr = new Uint8Array(this.added.length - chopLength);\r\n    newArr.set(this.added.subarray(0, newArr.length), 0);\r\n    this.added = newArr;\r\n\r\n    for (let i = 0; i < this.pieces.length - 1; i++) {\r\n      const p1 = this.pieces[i] as existingPiece;\r\n      const p2 = this.pieces[i + 1] as existingPiece;\r\n      if (p1.isContinuedBy(p2)) {\r\n        this.pieces.splice(i, 2, p1.join(p2 as any));\r\n        i--;\r\n      }\r\n    }\r\n  }\r\n\r\n  render(start: number, length: number) {\r\n    let out = new Uint8Array(length);\r\n    let meta: {added: [number, number][]} = {added: []}\r\n\r\n    let tracker = 0;\r\n    let startPlace: number;\r\n    let startIndex: number = 0;\r\n    for (const [i, piece] of this.pieces.entries()) {\r\n      tracker += piece.mLength;\r\n      if (tracker >= start) {\r\n        startPlace = piece.mLength - tracker + start;\r\n        startIndex = i;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (isInprogress(this.pieces[startIndex]) || this.pieces[startIndex] instanceof Added) {\r\n      meta.added.push([start - startPlace, start - startPlace + this.pieces[startIndex].length]);\r\n    }\r\n\r\n    let firstChunk = this.getPieceBuffer(this.pieces[startIndex]).subarray(startPlace, startPlace + length);\r\n    tracker = firstChunk.length;\r\n    out.set(firstChunk, 0);\r\n    for (let i = startIndex + 1; i < this.pieces.length; i++) {\r\n      let piece = this.pieces[i];\r\n      tracker += piece.mLength;\r\n      if (isInprogress(piece) || piece instanceof Added) {\r\n        meta.added.push([start + tracker - piece.mLength, start + tracker]);\r\n      }\r\n      if (tracker >= length) {\r\n        out.set(this.getPieceBuffer(piece).subarray(0, piece.mLength - tracker + length), tracker - piece.mLength);\r\n        break;\r\n      }\r\n      out.set(this.getPieceBuffer(piece), tracker - piece.mLength);\r\n    }\r\n\r\n    if (tracker !== length) {\r\n      return {\r\n        out: out.subarray(0, tracker),\r\n        meta\r\n      }\r\n    }\r\n    return {\r\n      out,\r\n      meta\r\n    };\r\n  }\r\n\r\n  get length() {\r\n    let lengthCheck = 0;\r\n    for (const piece of this.pieces) {\r\n      lengthCheck += piece.length;\r\n    }\r\n    return lengthCheck;\r\n  }\r\n\r\n  save() {\r\n    return this.render(0, this.length).out;\r\n  }\r\n\r\n  private getPieceBuffer(piece: anyPiece) {\r\n    if (isInprogress(piece)) {\r\n      return new Uint8Array(piece.content);\r\n    }\r\n    // implied else\r\n    if (piece instanceof Original) {\r\n      return this.original.subarray(piece.mOffset, piece.mOffset+piece.mLength);\r\n    } else {\r\n      return this.added.subarray(piece.mOffset, piece.mOffset+piece.mLength);\r\n    }\r\n\r\n  }\r\n}\r\n","export function floatToBin(value: number, size: 1 | 2 | 4 | 8, endianness: 'big' | 'little'): number[] {\r\n  let exponentBitCount;\r\n  switch(size) {\r\n    case 1: exponentBitCount = 4; break;\r\n    case 2: exponentBitCount = 5; break;\r\n    case 4: exponentBitCount = 8; break;\r\n    case 8: exponentBitCount = 11; break;\r\n    //case 128: exponentBitCount = 15; break;\r\n    //case 256: exponentBitCount = 19; break;\r\n    default:\r\n      return;\r\n  }\r\n\r\n  let sign = (value < 0) ? 1 : 0;\r\n\r\n  value = Math.abs(value);\r\n\r\n  let fullNum = Math.floor(value);\r\n  let decimal = value - fullNum;\r\n  let decMantissaLimit = ((size * 8) - 1 - exponentBitCount) - fullNum.toString(2).length + 3;\r\n  let decMantissa = '';\r\n\r\n  for (let i = 0; i < decMantissaLimit; i ++) {\r\n    decimal *= 2;\r\n    decMantissa += Math.floor(decimal);\r\n    if (decimal >= 1) decimal -= 1;\r\n  }\r\n\r\n  let rounding = decMantissa.substring(decMantissa.length - 2);\r\n  decMantissa = decMantissa.substring(0, decMantissa.length - 2);\r\n\r\n  console.log(decMantissa, rounding);\r\n  if (rounding.charAt(0) === '1') {\r\n    decMantissa = (parseInt(decMantissa, 2) + 1).toString(2);\r\n    if (/^10+$/.test(decMantissa)) {\r\n      fullNum += 1;\r\n      decMantissa = '';\r\n    }\r\n  }\r\n  let exponent = fullNum.toString(2).length - 1 + (Math.pow(2, exponentBitCount) / 2 - 1);\r\n  if (fullNum === 0) {\r\n    if (decMantissa === '') exponent = 0;\r\n    else exponent = (Math.pow(2, exponentBitCount) / 2 - 1) - decMantissa.match(/^(0*)/)![0].length - 1;\r\n  }\r\n  let expBin = exponent.toString(2).padStart(exponentBitCount, '0');\r\n\r\n  let fullBin = sign +\r\n  expBin +\r\n  (fullNum.toString(2) + decMantissa).padEnd(((size * 8) - 1 - exponentBitCount) - fullNum.toString(2).length, '0').substring(1);\r\n\r\n  console.log(sign, expBin, (fullNum.toString(2) + decMantissa).padEnd(((size * 8) - 1 - exponentBitCount) - fullNum.toString(2).length, '0').substring(1));\r\n  let out = [];\r\n  for (let i = 0; i < (size * 8); i += 8) {\r\n    out.push(parseInt(fullBin.substring(i, i+8), 2));\r\n  }\r\n\r\n  if (endianness === 'little') out.reverse();\r\n  if (value === 0) out.fill(0);\r\n\r\n  return out;\r\n}\r\n",".fudgedit-container {\r\n  overflow: hidden;\r\n  position: relative;\r\n  min-height: 100%;\r\n  color: black;\r\n  user-select: none;\r\n}\r\n\r\n.overlay {\r\n  height: 100%;\r\n  width: 100%;\r\n  position: absolute;\r\n  background-color: #f008;\r\n  overflow-y: scroll;\r\n  /* scroll-margin: 5; */\r\n  z-index: 4;\r\n  pointer-events: none;\r\n}\r\n.overlay::-webkit-scrollbar {\r\n  pointer-events: all;\r\n  width: 100%;\r\n}\r\n.overlay > .forceScroll {\r\n  height: 200%;\r\n  width: 100%;\r\n  position: absolute;\r\n}\r\n\r\n.hex {\r\n  font-family: 'Sourcecode Pro', Courier, monospace;\r\n  font-size: 15px;\r\n  outline: none;\r\n}\r\n\r\n.binView,\r\n.hexView,\r\n.asciiView,\r\n.lineLabels {\r\n  display: inline-block;\r\n  padding: 0 10px;\r\n  white-space: pre;\r\n  position: relative;\r\n}\r\n\r\n.binLine span,\r\n.hexLine span,\r\n.charLine span {\r\n  position: relative;\r\n  height: 17px;\r\n  display: inline-block;\r\n}\r\n\r\n.binLine,\r\n.hexLine,\r\n.charLine,\r\n.lineLabel {\r\n  height: 17px;\r\n}\r\n\r\n.binLine > span > span {\r\n  position: relative;\r\n  width: 14px;\r\n  padding: 0 3px;\r\n  box-sizing: border-box;\r\n}\r\n.binLine span {\r\n  padding: 0 0px;\r\n}\r\n.binLine > span > span.padBit::after {\r\n  /* padding-right: 15px; */\r\n  background-color: #0006;\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 100%;\r\n  left: calc(100% + 0.5px);\r\n  content: '';\r\n}\r\n.binLine > span > span:last-child.padBit::after {\r\n  /* padding-right: 15px; */\r\n  width: 2px;\r\n  left: 100%\r\n}\r\n.binLine > span:last-child > span:last-child.padBit::after {\r\n  display: none\r\n}\r\n\r\n.charLine span {\r\n  width: 10px;\r\n}\r\n\r\n.charLine > span.nonDisplay {\r\n  opacity: var(--nd-opacity);\r\n}\r\n\r\n.hexLine span {\r\n  position: relative;\r\n  padding: 0 5px;\r\n  width: 28px;\r\n  box-sizing: border-box;\r\n}\r\n.hexLine span:not(:last-child).padByte::after {\r\n  /* padding-right: 15px; */\r\n  background-color: #0006;\r\n  position: absolute;\r\n  width: 2px;\r\n  height: 100%;\r\n  left: calc(100% - 1px);\r\n  content: '';\r\n}\r\n\r\n.binLine span,\r\n.hexLine span {\r\n  cursor: default;\r\n  user-select: none;\r\n}\r\n\r\n.binLine span.selected,\r\n.charLine span.selected,\r\n.hexLine span.selected {\r\n  background-color: #8888FF80;\r\n}\r\n\r\n.binLine span.cursor,\r\n.charLine span.cursor,\r\n.hexLine span.cursor {\r\n  background-color: #008;\r\n  color: #FFF;\r\n}\r\n\r\n.binLine > span.added,\r\n.charLine span.added,\r\n.hexLine span.added {\r\n  color: red;\r\n}\r\n\r\n.binLine > span > span:hover,\r\n.charLine span:hover,\r\n.hexLine span:hover {\r\n  background-color: #000;\r\n  color: #FFF;\r\n}\r\n\r\n.hexLine span.ASCII {\r\n  font-weight: bold;\r\n}\r\n\r\n.binLine:nth-child(2n-1),\r\n.hexLine:nth-child(2n-1),\r\n.charLine:nth-child(2n-1),\r\n.lineLabel:nth-child(2n-1) {\r\n  background-color: #EEFFFF;\r\n}\r\n\r\n.binLine.selected,\r\n.charLine.selected,\r\n.hexLine.selected,\r\n.lineLabel.selected {\r\n  background-color: #FFA;\r\n}\r\n\r\n.separator {\r\n  opacity: 0;\r\n  pointer-events: none;\r\n}\r\n\r\n.region { opacity: 1; }\r\n\r\n.highlight { mix-blend-mode: multiply; }\r\n\r\n.region {\r\n  position: relative;\r\n}\r\n\r\n.highlight:hover  .region:not(:hover) {\r\n  fill: #0003;\r\n}\r\n\r\n.find {\r\n  width: calc(100% - 20px);\r\n  height: 50px;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  margin: auto;\r\n  background-color: #fff;\r\n  z-index: 4;\r\n}","import { Component, State, Prop, Method, Event, EventEmitter, h, forceUpdate } from '@stencil/core';\r\nimport { EditController } from './editController';\r\nimport { EditingMode, Endianness, IRegion, SearchType, NonLetter } from './interfaces';\r\nimport { floatToBin } from './floatConverter';\r\n\r\n@Component({\r\n  tag: 'hex-editor',\r\n  styleUrl: 'hex-editor.css',\r\n  shadow: false\r\n})\r\nexport class HexEditor {\r\n  // SECTION OWN PROPERTIES\r\n\r\n  editController: EditController;\r\n  regionScaleWidth: number;\r\n  regionScaleHeight: number;\r\n  canUpdateMouseMove: boolean;\r\n\r\n  // !SECTION OWN INTERNAL PROPERTIES\r\n\r\n  // SECTION STATE\r\n\r\n  /**\r\n   * contains metadata of the given file\r\n   * @type {File}\r\n   * @memberof HexEditor\r\n   */\r\n  @State() fileMetadata: File;\r\n\r\n  /**\r\n   * the loaded file\r\n   *\r\n   * @type {Uint8Array}\r\n   * @memberof HexEditor\r\n   */\r\n  @State() file: Uint8Array;\r\n\r\n  // keeps track of which line is displayed\r\n  @State() ln: number = 0;\r\n\r\n  get lineNumber() { return Math.floor(this.ln); }\r\n  set lineNumber(n: number) { this.ln = n; }\r\n\r\n  // stores position of mousedown event\r\n  tempSelection: {byte: number, bit: number};\r\n  // keeps track of selected portion of hex/ascii\r\n  @State() selection: {start: number, startBit: number, end: number, endBit: number};\r\n  // keeps track of where exactly the cursor is\r\n  @State() cursor: number;\r\n  // keeps track of the bit the cursor has selected (if in binary mode)\r\n  @State() bit: number;\r\n  // keeps track of what part of the editor was last clicked\r\n  @State() editingMode: EditingMode;\r\n\r\n  // the type of search to be executed\r\n  @State() searchType: SearchType = SearchType.ASCII;\r\n  // number of bytes the search should have (used when integer or float)\r\n  @State() searchByteCount: 1 | 2 | 4 | 8 = 1;\r\n  // endianness of the search\r\n  @State() searchEndian: Endianness = 'big';\r\n  // input to search for\r\n  @State() searchInput: string = '';\r\n  // results of the search\r\n  @State() searchResults: number[] = [];\r\n  // whether or not to display the search window\r\n  @State() searchActive: boolean = false;\r\n\r\n  // !SECTION\r\n\r\n  // SECTION PROPS\r\n\r\n  /**\r\n   * weather or not to display ASCII on the side\r\n   *\r\n   * @type {boolean}\r\n   * @memberof HexEditor\r\n   */\r\n  @Prop() displayAscii: boolean = true;\r\n\r\n  /**\r\n   * weather or not to display Hex\r\n   *\r\n   * @type {boolean}\r\n   * @memberof HexEditor\r\n   */\r\n  @Prop() displayHex: boolean = true;\r\n\r\n  /**\r\n   * weather or not to display binary\r\n   *\r\n   * @type {boolean}\r\n   * @memberof HexEditor\r\n   */\r\n  @Prop() displayBin: boolean = false;\r\n\r\n  /**\r\n   * the number of lines to display at once\r\n   *\r\n   * @type {number}\r\n   * @memberof HexEditor\r\n   */\r\n  @Prop() maxLines: number = 30;\r\n\r\n  /**\r\n   * the number of bytes to display per line\r\n   *\r\n   * @type {number}\r\n   * @memberof HexEditor\r\n   */\r\n  @Prop() bytesPerLine: number = 16;\r\n\r\n  \r\n  /**\r\n   * What character to put in place of invalid ASCII\r\n   * @memberof HexEditor\r\n   */\r\n  @Prop() nonDisplayCharacter: NonLetter = NonLetter.DOT;\r\n\r\n  /**\r\n   * How Opaque these invalid ASCII characters will be\r\n   * @memberof HexEditor\r\n   */\r\n  @Prop() nonDisplayOpacity: number = 0.45;\r\n\r\n  /**\r\n   * definitions for each chunk to display when\r\n   * displayAsChunks is enabled\r\n   *\r\n   * @type {number[]}\r\n   * @memberof HexEditor\r\n   */\r\n  @Prop() chunks: {\r\n    title?: string;\r\n    start: number;\r\n    end: number;\r\n  }[] = [];\r\n\r\n  /**\r\n   * displays the file as chunks (defined above)\r\n   *\r\n   * @type {boolean}\r\n   * @memberof HexEditor\r\n   */\r\n  @Prop() displayAsChunks: boolean = false;\r\n\r\n  /**\r\n   * weather or not to replace typical ASCII values\r\n   * with their ASCII value representation\r\n   * ( ex: 0x61 ==> \".a\" )\r\n   *\r\n   * @type {boolean}\r\n   * @memberof HexEditor\r\n   */\r\n  @Prop() asciiInline: boolean = false;\r\n\r\n  /**\r\n   * the number of chunks between separators\r\n   *\r\n   * @type {number}\r\n   * @memberof HexEditor\r\n   */\r\n  @Prop() bytesPerGroup: number = 4;\r\n\r\n  /**\r\n   * the number of bits between separators\r\n   * on the bit display\r\n   *\r\n   * @type {number}\r\n   * @memberof HexEditor\r\n   */\r\n  @Prop() bitsPerGroup: number = 8;\r\n\r\n  /**\r\n   * the mode of operation:\r\n   * region:\r\n   *    used to highlight different regions. Hovering over\r\n   *    a region displays a tooltip\r\n   * edit:\r\n   *    regions are displayed in the background, allowing\r\n   *    the user to edit directly\r\n   * noregion:\r\n   *    regions are not displayed at all\r\n   *\r\n   * @type {(\"region\" | \"edit\" | \"noregion\")}\r\n   * @memberof HexEditor\r\n   */\r\n  @Prop() mode: \"region\" | \"select\" | \"noregion\" = \"select\";\r\n\r\n  /**\r\n   * the mode of data entry:\r\n   * insert:\r\n   *    inserts data between bytes\r\n   * overwrite:\r\n   *    overwrites the currently selected byte\r\n   * readonly:\r\n   *    no edits are possible\r\n   *\r\n   * @type {(\"insert\" | \"overwrite\" | \"readonly\")}\r\n   * @memberof HexEditor\r\n   */\r\n  @Prop() editType: \"insert\" | \"overwrite\" | \"readonly\" = \"readonly\";\r\n\r\n  /**\r\n   * the number of regions to traverse\r\n   *\r\n   * @type {number}\r\n   * @memberof HexEditor\r\n   */\r\n  @Prop() regionDepth: number = 2;\r\n\r\n  /**\r\n   * the region data. Data will be displayed in the tooltip\r\n   * if mode is set to \"region\"\r\n   *\r\n   * @type {IRegion[]}\r\n   * @memberof HexEditor\r\n   */\r\n  @Prop() regions: IRegion[] = [];\r\n\r\n  // !SECTION\r\n\r\n  // SECTION EVENTS\r\n\r\n  /**\r\n   * Emitted when the lineNumber changes\r\n   *\r\n   * @type {EventEmitter}\r\n   * @memberof HexEditor\r\n   */\r\n  @Event() hexLineChanged: EventEmitter;\r\n\r\n  /**\r\n   * Emitted on the change of the cursor's position\r\n   *\r\n   * @type {EventEmitter}\r\n   * @memberof HexEditor\r\n   */\r\n  @Event() hexCursorChanged: EventEmitter;\r\n\r\n  /**\r\n   * Emitted when the selection changes\r\n   *\r\n   * @type {EventEmitter}\r\n   * @memberof HexEditor\r\n   */\r\n  @Event() hexSelectionChanged: EventEmitter;\r\n\r\n  /**\r\n   * fired when the file's data changes\r\n   *\r\n   * @type {EventEmitter}\r\n   * @memberof HexEditor\r\n   */\r\n  @Event() hexDataChanged: EventEmitter;\r\n\r\n  /**\r\n   * fired when the component loads\r\n   */\r\n  @Event() hexLoaded: EventEmitter;\r\n\r\n  // !SECTION\r\n\r\n  // SECTION COMPONENT LIFECYCLE METHODS\r\n\r\n  componentWillLoad() {\r\n    this.file = new Uint8Array(1024).map((_, i) => i % 256);\r\n\r\n    this.editController = new EditController(this);\r\n    this.regionScaleWidth = 28;\r\n    this.regionScaleHeight = 17;\r\n  }\r\n\r\n  componentDidLoad() {\r\n    this.hexLoaded.emit(this.editController);\r\n  }\r\n\r\n  // !SECTION\r\n\r\n  // SECTION LISTENERS\r\n  // !SECTION\r\n\r\n  // SECTION EXPOSED API\r\n\r\n  /**\r\n  * accepts and reads the given file, storing the result in\r\n  * the file variable\r\n  * @param file\r\n  */\r\n  @Method()\r\n  async acceptFile(file: File) {\r\n    console.log(file);\r\n    this.fileMetadata = file;\r\n\r\n    const reader = new FileReader();\r\n    reader.readAsArrayBuffer(file);\r\n    reader.onload = (event) => {\r\n      this.file = new Uint8Array((event.target as any).result);\r\n      this.editController = new EditController(this);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * returns the edited file\r\n   *\r\n   * @returns {(Promise<Uint8Array | void>)}\r\n   * @memberof HexEditor\r\n   */\r\n  @Method()\r\n  async saveFile(): Promise<Uint8Array | void> {\r\n    if (this.file == undefined) return;\r\n    return this.editController.save();\r\n  }\r\n\r\n  /**\r\n   * sets the line number\r\n   *\r\n   * @param {number} newLineNumber\r\n   * @memberof HexEditor\r\n   */\r\n  @Method()\r\n  async setLineNumber(newLineNumber: number) {\r\n    if (newLineNumber < 0) this.lineNumber = 0;\r\n    else this.lineNumber = newLineNumber;\r\n    this.hexLineChanged.emit(this.lineNumber);\r\n  }\r\n\r\n  /**\r\n   * sets the new cursor position\r\n   *\r\n   * @param {number} newCursorPosition\r\n   * @memberof HexEditor\r\n   */\r\n  @Method()\r\n  async setCursorPosition(newCursorPosition: number, bit?: number) {\r\n    if (bit) {\r\n      let adjustMain = 0;\r\n      if (bit >= 8) adjustMain = Math.floor(bit / 8);\r\n      this.cursor = newCursorPosition + adjustMain;\r\n      this.bit = bit % 8;\r\n    } else {\r\n      this.cursor = newCursorPosition;\r\n    }\r\n\r\n    this.hexCursorChanged.emit({byte: this.cursor, bit: this.bit});\r\n  }\r\n\r\n  /**\r\n   * sets the new selection bounds.\r\n   * @param {{start?: number, end?: number}} newSelection\r\n   * @memberof HexEditor\r\n   */\r\n  @Method()\r\n  async setSelection(newSelection: {start?: number, end?: number, startBit?: number, endBit?: number}) {\r\n    this.selection = {...this.selection, ...newSelection};\r\n    this.hexSelectionChanged.emit(this.selection);\r\n  }\r\n\r\n  /**\r\n   * fetches a Uint8Array of a given length\r\n   * at the given location\r\n   * @param location where to fetch the data from\r\n   * @param length how many bytes to load\r\n   * @memberof HexEditor\r\n   */\r\n  @Method()\r\n  async getChunk(location: number, length: number) {\r\n    return this.editController.render(location, length);\r\n  }\r\n\r\n  /**\r\n   * returns the file's metadata\r\n   * @memberof HexEditor\r\n   */\r\n  @Method()\r\n  async getFileMetadata() {\r\n    return this.fileMetadata;\r\n  }\r\n\r\n  /**\r\n   * executes a search in the currently loaded file with the supplied parameters\r\n   *\r\n   * @param {string} text\r\n   * @param {SearchType} searchType\r\n   * @param {[number, number]} range\r\n   * @param {(1 | 2 | 4 | 8)} [searchByteCount]\r\n   * @param {('big' | 'little')} [searchEndian]\r\n   * @memberof HexEditor\r\n   */\r\n  @Method()\r\n  async executeSearch(\r\n    text: string,\r\n    searchType: SearchType,\r\n    range?: [number, number],\r\n    searchByteCount?: 1 | 2 | 4 | 8,\r\n    searchEndian?: 'big' | 'little',\r\n  ) {\r\n    let searchArr;\r\n    try {\r\n      searchArr = this.formatSearch(text, searchType, searchByteCount, searchEndian);\r\n    } catch(e) {\r\n      console.log(e);\r\n    }\r\n\r\n    this.searchResults = this.editController.find(searchArr, range ? range[0] : 0, range ? range[1] - range[0] : undefined);\r\n    return this.searchResults;\r\n  }\r\n\r\n  // !SECTION\r\n\r\n  // LOCAL METHODS\r\n\r\n  /**\r\n   * builds the elements responsible for the hex view\r\n   */\r\n  buildHexView() {\r\n    const { lineNumber, maxLines, bytesPerLine, bytesPerGroup, bitsPerGroup, asciiInline } = this;\r\n    const start = lineNumber * bytesPerLine;\r\n\r\n    const chunkData = this.editController.render(start, maxLines * bytesPerLine);\r\n    const chunk = chunkData.out;\r\n    const addedRanges = chunkData.meta.added;\r\n\r\n    const lines: Uint8Array[] = [];\r\n    for (let i = 0; i < maxLines; i++) {\r\n      lines.push(chunk.subarray(i * bytesPerLine, (i+1) * bytesPerLine));\r\n    }\r\n\r\n    const binViews = [];\r\n    const lineViews = [];\r\n    const charViews = [];\r\n    let selectedLine = -1;\r\n    for (const [lineNum, line] of lines.entries()) {\r\n      if (line.length === 0) break;\r\n\r\n      // setup variables\r\n      const base = start + lineNum * bytesPerLine;\r\n      const binLines = [];\r\n      const charLines = [];\r\n      const hexLines = [];\r\n      let ascii: string = this.nonDisplayCharacter;\r\n      document.documentElement.style.setProperty('--nd-opacity', `${this.nonDisplayOpacity}`);\r\n\r\n      // sets up everything else.\r\n      for (const [position, val] of [...line.values()].entries()) {\r\n        let out: string;\r\n        // classes\r\n        const classList = [];\r\n        if (/\\w|[!@#$%^&*()_+=\\]\\\\:;\"'>.<,/?]/.test(String.fromCharCode(val))) {\r\n          ascii = String.fromCharCode(val);\r\n        } else { \r\n          classList.push(\"nonDisplay\");\r\n          ascii = this.nonDisplayCharacter;\r\n        }\r\n\r\n        if (asciiInline && /\\w/.test(ascii)) { out = \".\" + ascii; }\r\n        else { out = val.toString(16).toUpperCase().padStart(2, '0'); }\r\n\r\n        \r\n        if (out.startsWith('.')) classList.push('ASCII');\r\n        if (position % bytesPerGroup === bytesPerGroup - 1) classList.push('padByte');\r\n        if (Math.floor(this.cursor) === base + position) {\r\n          classList.push('cursor');\r\n          selectedLine = lineNum;\r\n        }\r\n        if (this.selection && this.selection.start <= base + position && base + position <= this.selection.end) classList.push('selected');\r\n        for (const [start, end] of addedRanges) {\r\n          if (start <= base + position && base + position < end) {\r\n            classList.push('added');\r\n            break;\r\n          }\r\n        }\r\n\r\n        // binary spans are more complicated than the others\r\n        // they are split into 8 pieces (the 8 bits that make up a byte)\r\n        let binArr = val.toString(2).padStart(8, '0').split('');\r\n        let binSpans = [];\r\n        if (this.displayBin) {\r\n          for (let i = 0; i < binArr.length; i++) {\r\n            let binClass = '';\r\n            if ((position * 8 + i) % bitsPerGroup == bitsPerGroup - 1) binClass += 'padBit';\r\n            if (classList.includes('cursor') && (this.bit === i || this.bit === -1)) binClass += ' cursor';\r\n            if (classList.includes('selected')) {\r\n              if (this.selection.start === this.selection.end) {\r\n                if (i >= this.selection.startBit && i <= this.selection.endBit)\r\n                  binClass += ' selected';\r\n              }\r\n              else if (this.selection.start === base + position) {\r\n                if (i >= this.selection.startBit) binClass += ' selected';\r\n              }\r\n              else if (this.selection.end === base + position) {\r\n                if (i <= this.selection.endBit || this.selection.endBit === -1) binClass += ' selected';\r\n              }\r\n              else binClass += ' selected';\r\n            }\r\n            binSpans.push(<span data-cursor-idx={i} class={binClass}>{binArr[i]}</span>);\r\n          }\r\n        }\r\n\r\n        if (this.displayBin) binLines.push(<span data-cursor-idx={base + position} class={\"binGroup\" + (classList.includes('added') ? ' added' : '')}>{binSpans}</span>)\r\n        if (this.displayAscii) charLines.push(<span data-cursor-idx={base + position} class={classList.join(' ')}>{ascii}</span>);\r\n        if (this.displayHex) hexLines.push(<span data-cursor-idx={base + position} class={classList.join(' ')}>{out}</span>);\r\n      }\r\n\r\n      if (this.displayBin) binViews.push((\r\n        <div class={'binLine' + (selectedLine === lineNum ? ' selected' : '')}>{binLines}</div>\r\n      ))\r\n\r\n      if (this.displayHex) {\r\n        lineViews.push((\r\n          <div class={'hexLine' + (selectedLine === lineNum ? ' selected' : '')}>{hexLines}</div>\r\n        ));\r\n      } else {\r\n        lineViews.push({});\r\n      }\r\n\r\n      if (this.displayAscii) charViews.push((\r\n        <div class={'charLine' + (selectedLine === lineNum ? ' selected' : '')}>{charLines}</div>\r\n      ))\r\n\r\n    }\r\n\r\n    // fill extra space\r\n    while (lineViews.length < maxLines) {\r\n      binViews.push(<div class=\"binLine\" style={{pointerEvents: 'none'}}><span>-</span></div>);\r\n      lineViews.push(<div class=\"hexLine\" style={{pointerEvents: 'none'}}><span>-</span></div>);\r\n      charViews.push(<div class=\"charLine\" style={{pointerEvents: 'none'}}><span>-</span></div>);\r\n    }\r\n\r\n    // line number builder\r\n    const lineLabels = [];\r\n    for (let i = 0; i < maxLines; i++) {\r\n      lineLabels.push(<div class={'lineLabel' + (selectedLine === i ? ' selected' : '')} style={{pointerEvents: 'none'}}>{'0x' + (start + i * bytesPerLine).toString(16).padStart(8, ' ')}</div>)\r\n    }\r\n\r\n    // regions\r\n\r\n    const binRegionMarkers = [];\r\n    const hexRegionMarkers = [];\r\n    const asciiRegionMarkers = [];\r\n\r\n    const buildRegion = (region: IRegion, depth = 0, index?: number) => {\r\n      if (region.end < start || region.start > start + this.maxLines * this.bytesPerLine) {\r\n        if (region.subRegions && depth + 1 !== this.regionDepth) {\r\n          for (const [i, r] of region.subRegions.entries()) buildRegion(r, depth + 1, i);\r\n        }\r\n        return;\r\n      };\r\n\r\n      if (depth === this.regionDepth) return;\r\n\r\n      // start / end offsets\r\n      const s = region.start % this.bytesPerLine;\r\n      const e = region.end % this.bytesPerLine;\r\n\r\n      // l is the \"height\" of the region. It was a bit confusing, so allow me to explain:\r\n      // instead of only taking into account the start and end of the region's offsets,\r\n      // what we ACTUALLY want is the start and end while taking into account the offset\r\n      // provided by 's'\r\n      const l = Math.floor((region.end - region.start + s) / this.bytesPerLine);\r\n\r\n      const offset = Math.floor(region.start / this.bytesPerLine) - lineNumber;\r\n\r\n      const getColor = {\r\n        0: ['#88F', '#BBF'],\r\n        1: ['#F88', '#FBB'],\r\n        2: ['#8D8', '#BDB']\r\n      }\r\n\r\n      const genPolygon = (width: number, height: number) => (\r\n          <polygon\r\n            onMouseMove={\r\n              (evt: MouseEvent) => {\r\n                if (document.getElementById('tooltip').getAttribute('active') === \"frozen\") return;\r\n                if (this.canUpdateMouseMove === undefined) {\r\n                  this.canUpdateMouseMove = true;\r\n                }\r\n                if (this.canUpdateMouseMove) {\r\n                  this.canUpdateMouseMove = false;\r\n                  document.documentElement.style.setProperty('--mouse-x', `${evt.clientX}`);\r\n                  document.documentElement.style.setProperty('--mouse-y', `${evt.clientY}`);\r\n                  document.getElementById('tooltip').setAttribute('active', 'true')\r\n                  document.getElementById('tooltip').setAttribute('complex', `${JSON.stringify({...region, subRegions: region.subRegions ? region.subRegions.map(sr => sr.name) : null})}`);\r\n\r\n                  setTimeout(() => {this.canUpdateMouseMove = true}, 50);\r\n                }\r\n              }\r\n            }\r\n            onMouseLeave={\r\n              () => { \r\n                if (document.getElementById('tooltip').getAttribute('active') === \"true\")\r\n                  document.getElementById('tooltip').setAttribute('active', 'false')\r\n              }\r\n            }\r\n            onClick={\r\n              (evt: MouseEvent) => {\r\n                if (document.getElementById('tooltip').getAttribute('active') === \"frozen\") {\r\n                  if (document.getSelection().anchorNode?.parentElement?.parentElement?.tagName === \"HEX-TOOLTIP\") {\r\n                    document.getSelection().empty();\r\n                  }\r\n                  document.documentElement.style.setProperty('--mouse-x', `${evt.clientX}`);\r\n                  document.documentElement.style.setProperty('--mouse-y', `${evt.clientY}`);\r\n                  document.getElementById('tooltip').setAttribute('active', 'true')\r\n                  document.getElementById('tooltip').setAttribute('complex', `${JSON.stringify({...region, subRegions: region.subRegions ? region.subRegions.map(sr => sr.name) : null})}`);\r\n                } else {\r\n                  document.getElementById('tooltip').setAttribute('active', 'frozen');\r\n                  document.documentElement.style.setProperty('--mouse-x', `${evt.clientX - 10}`);\r\n                  document.documentElement.style.setProperty('--mouse-y', `${evt.clientY - 10}`);\r\n                };\r\n              }\r\n            }\r\n            class=\"region\"\r\n            points={`\r\n              0,${(1 + offset) * height}\r\n              ${s * width},${(1 + offset) * height}\r\n              ${s * width},${offset * height}\r\n              ${this.bytesPerLine * width},${offset * height}\r\n              ${this.bytesPerLine * width},${(l + offset) * height}\r\n              ${e * width},${(l + offset) * height}\r\n              ${e * width},${(l + offset + 1) * height}\r\n              0,${(l+1 + offset) * height}\r\n            `} fill={region.color || getColor[depth % 3][index % 2]} stroke=\"none\"\r\n          />\r\n        )\r\n\r\n      binRegionMarkers.push(genPolygon(14 * 8, this.regionScaleHeight));\r\n      hexRegionMarkers.push(genPolygon(this.regionScaleWidth, this.regionScaleHeight));\r\n      asciiRegionMarkers.push(genPolygon(10, this.regionScaleHeight));\r\n      // if regions don't work right in the future then the if condition below is the reason why\r\n      if (region.subRegions && depth + 1 !== this.regionDepth) {\r\n        for (const [i, r] of region.subRegions.entries()) buildRegion(r, depth + 1, i);\r\n      }\r\n      // }\r\n    }\r\n\r\n    for (const [i, region] of this.regions.entries()) {\r\n      buildRegion(region, 0, i);\r\n    }\r\n    // style={{width: this.bytesPerLine * this.regionScaleWidth, height: this.maxLines * this.regionScaleHeight}}\r\n\r\n    const binRegions = <svg viewBox={`0 0 ${this.bytesPerLine * 14 * 8} ${this.maxLines * this.regionScaleHeight}`} width={`${this.bytesPerLine * 14 * 8}`} height={`${this.maxLines * this.regionScaleHeight}`}>{binRegionMarkers}</svg>\r\n    const hexRegions = <svg viewBox={`0 0 ${this.bytesPerLine * this.regionScaleWidth} ${this.maxLines * this.regionScaleHeight}`} width={`${this.bytesPerLine * this.regionScaleWidth}`} height={`${this.maxLines * this.regionScaleHeight}`}>{hexRegionMarkers}</svg>\r\n    const asciiRegions = <svg viewBox={`0 0 ${this.bytesPerLine * 10} ${this.maxLines * this.regionScaleHeight}`} width={`${this.bytesPerLine * 10}`} height={`${this.maxLines * this.regionScaleHeight}`}>{asciiRegionMarkers}</svg>\r\n    return {\r\n      lineViews,\r\n      charViews,\r\n      binViews,\r\n      lineLabels,\r\n      binRegions,\r\n      hexRegions,\r\n      asciiRegions\r\n    }\r\n  }\r\n\r\n  buildChunks() {\r\n    const { lineNumber, maxLines, bytesPerLine, bytesPerGroup, chunks, bitsPerGroup, asciiInline } = this;\r\n    // console.log(lineNumber);\r\n    const chunkOffset = {\r\n      chunk: 0,\r\n      chunkLineOffs: 0\r\n    };\r\n    // get offset data for the generated chunks\r\n    for (let lNum = lineNumber, j = 0; lNum > 0 && j < chunks.length; lNum--, j++) {\r\n      const acc = Math.floor((chunks[j].end - chunks[j].start) / bytesPerLine) + 1;\r\n      lNum -= acc;\r\n      if (lNum > 0) chunkOffset.chunk += 1;\r\n      else chunkOffset.chunkLineOffs = acc - lNum * -1;\r\n    }\r\n\r\n    // render the chunks, rendering\r\n    // only the parts that are visible\r\n    const renderedChunks: {\r\n      data: Uint8Array,\r\n      start: number,\r\n      startLine: number,\r\n      endLine: number,\r\n    }[] = [];\r\n    for (let i = chunkOffset.chunk, lineCount = 0; lineCount < maxLines && i < chunks.length; i++) {\r\n      const startLine = lineCount;\r\n      const chunk = chunks[i];\r\n      let actualStart = chunk.start;\r\n      if (i == chunkOffset.chunk) actualStart += bytesPerLine * chunkOffset.chunkLineOffs;\r\n      if (chunk.end - actualStart <= 0) {\r\n        // renderedChunks.push({data: new Uint8Array(0), start: -1, startLine: -1, endLine: -1});\r\n        continue;\r\n      }\r\n      lineCount += Math.ceil((chunk.end - actualStart) / bytesPerLine);\r\n\r\n      let actualEnd = chunk.end;\r\n      if (lineCount > maxLines) actualEnd -= (lineCount - maxLines) * bytesPerLine;\r\n      // console.log(actualEnd - actualStart);\r\n      const rendered = this.editController.render(actualStart, actualEnd - actualStart).out;\r\n\r\n      renderedChunks.push({start: actualStart, data: rendered, startLine, endLine: lineCount});\r\n      for (let j = 0; j < 1; j++) {\r\n        lineCount += 1;\r\n        renderedChunks.push({data: new Uint8Array(0), start: -1, startLine: -1, endLine: -1});\r\n      }\r\n\r\n\r\n    }\r\n    renderedChunks.pop();\r\n\r\n    let lineViews = [];\r\n    let charViews = [];\r\n    let binViews = [];\r\n    let lineLabels = [];\r\n\r\n    const binRegionMarkers = [];\r\n    const hexRegionMarkers = [];\r\n    const asciiRegionMarkers = [];\r\n\r\n    for (const {start, data, startLine} of renderedChunks) {\r\n      if (start === -1) {\r\n        lineLabels.push(<div class='separator' style={{pointerEvents: 'none'}}>NA</div>)\r\n        lineViews.push(<div class='separator' style={{pointerEvents: 'none'}}>NA</div>)\r\n        charViews.push(<div class='separator' style={{pointerEvents: 'none'}}>NA</div>)\r\n        binViews.push(<div class='separator' style={{pointerEvents: 'none'}}>NA</div>)\r\n        continue;\r\n      }\r\n      for (let i = 0; i < data.length; i += bytesPerLine) {\r\n        const lineStart = start + i;\r\n        const hexLine = [];\r\n        const charLine = [];\r\n        const binLine = [];\r\n        let selectedLine = -1;\r\n        for (let j = i; j < i + bytesPerLine && j < data.length; j++) {\r\n          const val = data[j];\r\n          const position = start + j;\r\n\r\n          let out: string;\r\n          let ascii: string;\r\n          if (/\\w|[!@#$%^&*()_+=\\]\\\\:;\"'>.<,/?]/.test(String.fromCharCode(val))) {\r\n            ascii = String.fromCharCode(val);\r\n          } else { ascii = this.nonDisplayCharacter; }\r\n\r\n          if (asciiInline && /\\w/.test(ascii)) { out = \".\" + ascii; }\r\n          else { out = val.toString(16).toUpperCase().padStart(2, '0'); }\r\n\r\n          // classes\r\n          const classList = [];\r\n          if (out.startsWith('.')) classList.push('ASCII');\r\n          if ((j - i) % bytesPerGroup === bytesPerGroup - 1) classList.push('padByte');\r\n          if (Math.floor(this.cursor) === position) {\r\n            classList.push('cursor');\r\n            selectedLine = lineStart;\r\n          }\r\n          if (this.selection && this.selection.start <= position && position <= this.selection.end) classList.push('selected');\r\n\r\n          // binary spans are more complicated than the others\r\n          // they are split into 8 pieces (the 8 bits that make up a byte)\r\n          let binArr = val.toString(2).padStart(8, '0').split('');\r\n          let binSpans = [];\r\n          if (this.displayBin) {\r\n            for (let k = 0; k < binArr.length; k++) {\r\n              let binClass = '';\r\n              if ((position * 8 + k) % bitsPerGroup == bitsPerGroup - 1) binClass += 'padBit';\r\n              if (classList.includes('cursor') && (this.bit === k || this.bit === -1)) binClass += ' cursor';\r\n              if (classList.includes('selected')) {\r\n                if (this.selection.start === this.selection.end) {\r\n                  if (k >= this.selection.startBit && k <= this.selection.endBit)\r\n                    binClass += ' selected';\r\n                }\r\n                else if (this.selection.start == position) {\r\n                  if (k >= this.selection.startBit) binClass += ' selected';\r\n                }\r\n                else if (this.selection.end == position) {\r\n                  if (k <= this.selection.endBit || this.selection.endBit === -1) binClass += ' selected';\r\n                }\r\n                else binClass += ' selected';\r\n              }\r\n              binSpans.push(<span data-cursor-idx={k} class={binClass}>{binArr[k]}</span>);\r\n            }\r\n          }\r\n\r\n          if (this.displayBin) binLine.push(<span data-cursor-idx={position} class={\"binGroup\" + (classList.includes('added') ? ' added' : '')}>{binSpans}</span>)\r\n          if (this.displayAscii) charLine.push(<span data-cursor-idx={position} class={classList.join(' ')}>{ascii}</span>);\r\n          if (this.displayHex) hexLine.push(<span data-cursor-idx={position} class={classList.join(' ')}>{out}</span>);\r\n        }\r\n\r\n        lineLabels.push((\r\n          <div class={'lineLabel' + (selectedLine === lineStart ? ' selected' : '')} style={{pointerEvents: 'none'}}>{'0x' + (lineStart).toString(16).padStart(8, ' ')}</div>\r\n        ))\r\n\r\n        if (this.displayBin) binViews.push((\r\n          <div class={'binLine' + (selectedLine === lineStart ? ' selected' : '')}>{binLine}</div>\r\n        ))\r\n\r\n        if (this.displayHex) {\r\n          lineViews.push((\r\n            <div class={'hexLine' + (selectedLine === lineStart ? ' selected' : '')}>{hexLine}</div>\r\n          ));\r\n        } else {\r\n          lineViews.push({});\r\n        }\r\n\r\n        if (this.displayAscii) charViews.push((\r\n          <div class={'charLine' + (selectedLine === lineStart ? ' selected' : '')}>{charLine}</div>\r\n        ))\r\n\r\n      }\r\n\r\n      const buildRegion = (region: IRegion, depth = 0, index?: number) => {\r\n        const lineCount = Math.floor(data.length / bytesPerLine);\r\n        const horizOffset = start % bytesPerLine;\r\n\r\n        if (region.end < start || region.start > start + lineCount * bytesPerLine) {\r\n          if (region.subRegions && depth + 1 !== this.regionDepth) {\r\n            for (const [i, r] of region.subRegions.entries()) buildRegion(r, depth + 1, i);\r\n          }\r\n          return;\r\n        };\r\n\r\n        if (depth === this.regionDepth) return;\r\n\r\n        const startByte = Math.max(region.start, start);\r\n        const endByte = Math.min(region.end, start + data.length);\r\n\r\n        const s = (startByte - horizOffset) % bytesPerLine;\r\n        const e = (endByte - horizOffset) % bytesPerLine;\r\n\r\n        const l = Math.floor((endByte - startByte + s) / bytesPerLine);\r\n\r\n        const vertOffset = (Math.floor((startByte - start) / bytesPerLine) + startLine);\r\n        // console.log(startLine)\r\n        // console.log(idx, startByte.toString(16), vertOffset);\r\n\r\n        const getColor = {\r\n          0: ['#88F', '#BBF'],\r\n          1: ['#F88', '#FBB'],\r\n          2: ['#8D8', '#BDB']\r\n        };\r\n\r\n        const genPolygon = (width: number, height: number) => (\r\n          <polygon\r\n            onMouseMove={\r\n              (evt: MouseEvent) => {\r\n                if (this.canUpdateMouseMove === undefined) {\r\n                  this.canUpdateMouseMove = true;\r\n                }\r\n                if (this.canUpdateMouseMove) {\r\n                  this.canUpdateMouseMove = false;\r\n                  document.documentElement.style.setProperty('--mouse-x', `${evt.clientX}`);\r\n                  document.documentElement.style.setProperty('--mouse-y', `${evt.clientY}`);\r\n                  document.getElementById('tooltip').setAttribute('active', 'true')\r\n                  document.getElementById('tooltip').setAttribute('complex', `${JSON.stringify({...region, subRegions: region.subRegions ? region.subRegions.map(sr => sr.name) : null})}`);\r\n\r\n                  setTimeout(() => {this.canUpdateMouseMove = true}, 50);\r\n                }\r\n              }\r\n            }\r\n            onMouseLeave={() => document.getElementById('tooltip').setAttribute('active', 'false')}\r\n            class=\"region\"\r\n            points={`\r\n              0,${(1 + vertOffset) * height}\r\n              ${s * width},${(1 + vertOffset) * height}\r\n              ${s * width},${vertOffset * height}\r\n              ${this.bytesPerLine * width},${vertOffset * height}\r\n              ${this.bytesPerLine * width},${(l + vertOffset) * height}\r\n              ${e * width},${(l + vertOffset) * height}\r\n              ${e * width},${(l + vertOffset + 1) * height}\r\n              0,${(l+1 + vertOffset) * height}\r\n            `} fill={region.color || getColor[depth % 3][index % 2]} stroke=\"none\"\r\n          />\r\n        )\r\n\r\n        binRegionMarkers.push(genPolygon(14 * 8, this.regionScaleHeight));\r\n        hexRegionMarkers.push(genPolygon(this.regionScaleWidth, this.regionScaleHeight));\r\n        asciiRegionMarkers.push(genPolygon(10, this.regionScaleHeight));\r\n        // if regions don't work right in the future then the if condition below is the reason why\r\n        if (region.subRegions && depth + 1 !== this.regionDepth) {\r\n          for (const [i, r] of region.subRegions.entries()) buildRegion(r, depth + 1, i);\r\n        }\r\n\r\n      }\r\n\r\n      for (const [i, region] of this.regions.entries()) {\r\n        buildRegion(region, 0, i);\r\n      }\r\n    }\r\n\r\n    while (lineViews.length < maxLines) {\r\n      lineLabels.push(<div class=\"separator\" ><span>-</span></div>)\r\n      binViews.push(<div class=\"separator\" ><span>-</span></div>);\r\n      lineViews.push(<div class=\"separator\" ><span>-</span></div>);\r\n      charViews.push(<div class=\"separator\" ><span>-</span></div>);\r\n    }\r\n\r\n    const binRegions = <svg viewBox={`0 0 ${this.bytesPerLine * 14 * 8} ${this.maxLines * this.regionScaleHeight}`} width={`${this.bytesPerLine * 14 * 8}`} height={`${this.maxLines * this.regionScaleHeight}`}>{binRegionMarkers}</svg>\r\n    const hexRegions = <svg viewBox={`0 0 ${this.bytesPerLine * this.regionScaleWidth} ${this.maxLines * this.regionScaleHeight}`} width={`${this.bytesPerLine * this.regionScaleWidth}`} height={`${this.maxLines * this.regionScaleHeight}`}>{hexRegionMarkers}</svg>\r\n    const asciiRegions = <svg viewBox={`0 0 ${this.bytesPerLine * 10} ${this.maxLines * this.regionScaleHeight}`} width={`${this.bytesPerLine * 10}`} height={`${this.maxLines * this.regionScaleHeight}`}>{asciiRegionMarkers}</svg>\r\n\r\n    return {\r\n      lineViews,\r\n      charViews,\r\n      binViews,\r\n      lineLabels,\r\n      binRegions,\r\n      hexRegions,\r\n      asciiRegions\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * edits the underlying uint8array or\r\n   * adjusts the cursor position\r\n   *\r\n   * @param {KeyboardEvent} evt\r\n   * @returns\r\n   * @memberof HexEditor\r\n   */\r\n  edit(evt: KeyboardEvent) {\r\n    if ((evt.target as HTMLElement).className !== 'hex') return;\r\n    const evtArrowKeyConditions = {\r\n      ArrowDown: () => {\r\n        this.setCursorPosition(\r\n          (this.cursor + this.bytesPerLine > this.editController.length)\r\n          ? this.editController.length\r\n          : this.cursor + this.bytesPerLine)\r\n      },\r\n      ArrowUp: () => { this.setCursorPosition((this.cursor - this.bytesPerLine < 0) ? 0 : this.cursor - this.bytesPerLine) },\r\n      ArrowRight: () => {\r\n        this.setCursorPosition(\r\n          (this.cursor + 1 > this.editController.length)\r\n          ? this.editController.length\r\n          : this.cursor + 1)\r\n      },\r\n      ArrowLeft: () => { this.setCursorPosition((this.cursor - 1 < 0) ? 0 : this.cursor - 1) }\r\n    }\r\n    if (evtArrowKeyConditions[evt.key]) {\r\n      evt.preventDefault();\r\n      // commits/ends any edits\r\n      if (this.editController.inProgress) this.editController.commit();\r\n      // executes key function\r\n      evtArrowKeyConditions[evt.key]();\r\n      // adjusts scroll / selection based on new cursor position\r\n      if (this.cursor > (this.lineNumber + this.maxLines) * this.bytesPerLine - 1)\r\n        this.setLineNumber(Math.floor(this.cursor / this.bytesPerLine) - this.maxLines + 1)\r\n      else if (this.cursor < this.lineNumber * this.bytesPerLine)\r\n        this.setLineNumber(Math.floor(this.cursor / this.bytesPerLine))\r\n      // adjusts selection if shift key is held\r\n      if (evt.shiftKey) {\r\n        if (this.selection.start > this.cursor) this.setSelection({start: this.cursor});\r\n        else this.setSelection({end: this.cursor});\r\n      } else {\r\n        this.setSelection({start: this.cursor, end: this.cursor})\r\n      }\r\n    } else if ((evt.ctrlKey || evt.metaKey) && evt.key === 'f') {\r\n      // toggles find window\r\n      evt.preventDefault();\r\n      this.searchActive = !this.searchActive;\r\n      forceUpdate(this);\r\n    } else {\r\n      if (this.editType === 'readonly') return;\r\n      evt.preventDefault();\r\n      this.editController.buildEdit(evt);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * turns the search input from the type into an array of numbers\r\n   * that represent its binary equivalent in the format specified\r\n   *\r\n   * @param {string} text\r\n   * @param {SearchType} searchType\r\n   * @param {(1 | 2 | 4 | 8)} [searchByteCount]\r\n   * @param {('big' | 'little')} [searchEndian]\r\n   * @returns {number[]}\r\n   * @memberof HexEditor\r\n   */\r\n  formatSearch(\r\n    text: string,\r\n    searchType: SearchType,\r\n    searchByteCount?: 1 | 2 | 4 | 8,\r\n    searchEndian?: 'big' | 'little'\r\n  ): number[] {\r\n    if (text.length === 0) throw new Error('LEN0: there needs to be something to search for...');\r\n    switch(searchType) {\r\n      case SearchType.INTEGER:\r\n        const max = parseInt('0x' + new Array(searchByteCount + 1).join('FF'), 16);\r\n        let v = parseInt(text);\r\n        if (Math.abs(v) > max) {\r\n          v = max * Math.sign(v);\r\n        }\r\n        const out = v.toString(16).padStart(2 * searchByteCount, '0').match(/.{2}/g).map(v => parseInt(v, 16));\r\n        if (searchEndian === 'little') out.reverse();\r\n        return out;\r\n      case SearchType.FLOAT:\r\n        return floatToBin(parseFloat(text), searchByteCount, searchEndian)\r\n      case SearchType.BYTE:\r\n        if (/[^0-9a-f ,|;]/ig.test(text)) throw new Error('UC: Unexpected Character (must be exclusively 0-9 and a-f)')\r\n        else {\r\n          return text.replace(/[ ,|;]/ig, '').match(/.{2}/g).map(v => parseInt(v, 16));\r\n        }\r\n      case SearchType.ASCII:\r\n      default:\r\n        return text.split('').map(ch => ch.charCodeAt(0));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * triggers a find operation on the currently selected chunk\r\n   * if there is one, otherwise it searches the full thing\r\n   *\r\n   * @memberof HexEditor\r\n   */\r\n  async findInSelection() {\r\n    const range = this.selection ? this.selection.end - this.selection.start : 0;\r\n    this.searchResults =\r\n      await this.executeSearch(\r\n        this.searchInput,\r\n        this.searchType,\r\n        range === 0\r\n          ? undefined\r\n          : [ this.selection.start, this.selection.end ],\r\n        this.searchByteCount,\r\n        this.searchEndian);\r\n  }\r\n\r\n  /**\r\n   * displays the full hexidecimal view\r\n   */\r\n  showHex() {\r\n    const { lineViews, binViews, charViews, lineLabels, binRegions, hexRegions, asciiRegions } = this.buildHexView();\r\n\r\n    let searchHexDisplay;\r\n    try {\r\n      searchHexDisplay =\r\n        this.formatSearch(this.searchInput, this.searchType, this.searchByteCount, this.searchEndian)\r\n          .map(v => v.toString(16).padStart(2, '0')).join(', ');\r\n    } catch (e) {\r\n      if (e.message.startsWith('LEN0')) searchHexDisplay = '';\r\n      else searchHexDisplay = e.message;\r\n    }\r\n\r\n    let searchResults;\r\n    if (this.searchActive) {\r\n      const jumpToResult = (val: string) => {\r\n        let v = parseInt(val);\r\n        this.setCursorPosition(v);\r\n        this.setSelection({\r\n          start: v,\r\n          end: v + (([SearchType.INTEGER, SearchType.FLOAT].includes(this.searchType)) ? this.searchByteCount : this.searchInput.length) - 1,\r\n          startBit: -1,\r\n          endBit: -1\r\n        })\r\n        this.setLineNumber(Math.floor(v / this.bytesPerLine) - this.maxLines / 2)\r\n      }\r\n      searchResults = (\r\n        <select onChange={(evt) => jumpToResult((evt.target as HTMLSelectElement).value)}>\r\n          {this.searchResults.map(v =>\r\n            <option value={v}>{`0x${v.toString(16)}`}</option>\r\n          )}\r\n        </select>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div class=\"hex\"\r\n        onMouseEnter={(evt) => this._toggleScrollListener(evt)}\r\n        onMouseLeave={(evt) => this._toggleScrollListener(evt)}\r\n        onMouseDown={(evt) => this.beginSelection(evt)}\r\n        onMouseUp={(evt) => this.endSelection(evt)}\r\n        \r\n        tabindex=\"0\"\r\n        onKeyDown={(evt) => this.edit(evt)}\r\n      >\r\n        <div id=\"MEASURE\" class=\"hex\" style={{position: 'absolute', visibility: 'hidden', padding: '0 5px'}}>AB</div>\r\n        <div class=\"lineLabels\">\r\n          {lineLabels}\r\n        </div>\r\n        {this.displayBin ?\r\n          <div class=\"binView\">\r\n            <div class=\"highlight\" style={{position: 'absolute', top: '0', display: this.mode === 'noregion' ? 'none' : 'block', zIndex: this.mode === 'region' ? '3' : '0'}}>\r\n              {binRegions}\r\n            </div>\r\n            <div class=\"main\">\r\n              {binViews}\r\n            </div>\r\n          </div>\r\n        : null}\r\n        {this.displayHex ?\r\n          <div class=\"hexView\">\r\n            <div class=\"highlight\" style={{position: 'absolute', top: '0', display: this.mode === 'noregion' ? 'none' : 'block', zIndex: this.mode === 'region' ? '3' : '0'}}>\r\n              {hexRegions}\r\n            </div>\r\n            <div class=\"main\">\r\n              {lineViews}\r\n            </div>\r\n          </div>\r\n        : null}\r\n        {this.displayAscii ?\r\n          <div class=\"asciiView\">\r\n            <div class=\"highlight\" style={{position: 'absolute', top: '0', display: this.mode === 'noregion' ? 'none' : 'block', zIndex: this.mode === 'region' ? '3' : '0'}}>\r\n              {asciiRegions}\r\n            </div>\r\n            <div class=\"main\">\r\n              {charViews}\r\n            </div>\r\n          </div>\r\n          : null}\r\n        {this.searchActive ?\r\n          <div class=\"find\">\r\n            search: \r\n            <input type=\"text\" onChange={(evt) => this.searchInput = (evt.target as HTMLInputElement).value} />\r\n            <select onChange={(evt) => this.searchType = (evt.target as HTMLSelectElement).value as any}>\r\n              <option value={SearchType.ASCII}>ASCII string</option>\r\n              <option value={SearchType.BYTE}>bytes</option>\r\n              <option value={SearchType.INTEGER}>integer</option>\r\n              <option value={SearchType.FLOAT}>float</option>\r\n            </select>\r\n            {([SearchType.INTEGER, SearchType.FLOAT].includes(this.searchType)) ? [\r\n              <select onChange={(evt) => this.searchByteCount = parseInt((evt.target as HTMLSelectElement).value) as any}>\r\n                <option value=\"1\">1 byte</option>\r\n                <option value=\"2\">2 bytes</option>\r\n                <option value=\"4\">4 bytes</option>\r\n                <option value=\"8\">8 bytes</option>\r\n              </select>,\r\n              <select onChange={(evt) => this.searchEndian = (evt.target as HTMLSelectElement).value as any}>\r\n                <option value=\"big\">big endian</option>\r\n                <option value=\"little\">little endian</option>\r\n              </select>\r\n            ]\r\n            : null}\r\n            <button onClick={() => this.findInSelection()}>search</button>\r\n            <br/>\r\n            hex: {searchHexDisplay} | results: {searchResults}\r\n          </div>\r\n        : null}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * displays the chunks\r\n   *\r\n   * @memberof HexEditor\r\n   */\r\n  showChunks() {\r\n    const {\r\n      lineViews,\r\n      binViews,\r\n      charViews,\r\n      lineLabels,\r\n      binRegions,\r\n      hexRegions,\r\n      asciiRegions\r\n    } = this.buildChunks();\r\n\r\n\r\n    return (\r\n      <div class=\"hex\"\r\n        onMouseEnter={(evt) => this._toggleScrollListener(evt)}\r\n        onMouseLeave={(evt) => this._toggleScrollListener(evt)}\r\n        onMouseDown={(evt) => this.beginSelection(evt)}\r\n        onMouseUp={(evt) => this.endSelection(evt)}\r\n\r\n        tabindex=\"0\"\r\n        onKeyDown={(evt) => this.edit(evt)}\r\n      >\r\n        <div id=\"MEASURE\" class=\"hex\" style={{position: 'absolute', visibility: 'hidden', padding: '0 5px'}}>AB</div>\r\n        <div class=\"lineLabels\">\r\n          {lineLabels}\r\n        </div>\r\n        {this.displayBin ?\r\n          <div class=\"binView\">\r\n            <div class=\"highlight\" style={{position: 'absolute', top: '0', display: this.mode === 'noregion' ? 'none' : 'block', zIndex: this.mode === 'region' ? '3' : '0'}}>\r\n              {binRegions}\r\n            </div>\r\n            <div class=\"main\">\r\n              {binViews}\r\n            </div>\r\n          </div>\r\n        : null}\r\n        {this.displayHex ?\r\n          <div class=\"hexView\">\r\n            <div class=\"highlight\" style={{position: 'absolute', top: '0', display: this.mode === 'noregion' ? 'none' : 'block', zIndex: this.mode === 'region' ? '3' : '0'}}>\r\n              {hexRegions}\r\n            </div>\r\n            <div class=\"main\">\r\n              {lineViews}\r\n            </div>\r\n          </div>\r\n        : null}\r\n        {this.displayAscii ?\r\n          <div class=\"asciiView\">\r\n            <div class=\"highlight\" style={{position: 'absolute', top: '0', display: this.mode === 'noregion' ? 'none' : 'block', zIndex: this.mode === 'region' ? '3' : '0'}}>\r\n              {asciiRegions}\r\n            </div>\r\n            <div class=\"main\">\r\n              {charViews}\r\n            </div>\r\n          </div>\r\n          : null}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * gets the exact position of\r\n   * @param evt the mousedown event\r\n   */\r\n  beginSelection(evt: any) {\r\n    if ((evt.target as HTMLElement).id === 'HEX-SCROLLBAR') return;\r\n    if ((evt.target as HTMLElement).parentElement.tagName == \"svg\") return;\r\n    const parentClassName = (evt.target as HTMLElement).parentElement.className;\r\n    if (!parentClassName) return;\r\n    if (parentClassName.includes('charLine')) this.editingMode = EditingMode.ASCII;\r\n    else if (parentClassName.includes('hexLine')) this.editingMode = EditingMode.BYTE;\r\n    else if (parentClassName.includes('binGroup')) this.editingMode = EditingMode.BIT;\r\n    else return;\r\n\r\n    if (this.editingMode === EditingMode.BIT) {\r\n      this.tempSelection = {\r\n        byte: parseInt(evt.composedPath()[1].getAttribute('data-cursor-idx')),\r\n        bit: parseInt(evt.target.getAttribute('data-cursor-idx'))\r\n      }\r\n    }\r\n    else {\r\n      this.tempSelection = {\r\n        byte: parseInt(evt.target.getAttribute('data-cursor-idx')),\r\n        bit: -1\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  endSelection(evt: any) {\r\n    if (this.tempSelection === null) return;\r\n\r\n    if ((evt.target as HTMLElement).parentElement.tagName == \"svg\") return;\r\n    const parentClassName = (evt.target as HTMLElement).parentElement.className;\r\n    if (parentClassName.includes('charLine')) this.editingMode = EditingMode.ASCII;\r\n    else if (parentClassName.includes('hexLine')) this.editingMode = EditingMode.BYTE;\r\n    else if (parentClassName.includes('binGroup')) this.editingMode = EditingMode.BIT;\r\n    else return;\r\n\r\n    let chosen;\r\n    if (this.editingMode === EditingMode.BIT) {\r\n      chosen = {\r\n        byte: parseInt(evt.composedPath()[1].getAttribute('data-cursor-idx')),\r\n        bit: parseInt(evt.target.getAttribute('data-cursor-idx'))\r\n      }\r\n    }\r\n    else {\r\n      chosen = {\r\n        byte: parseInt(evt.target.getAttribute('data-cursor-idx')),\r\n        bit: -1\r\n      }\r\n    }\r\n\r\n    if (this.tempSelection.byte + this.tempSelection.bit / 10 > chosen.byte + chosen.bit / 10) {\r\n      this.setSelection({\r\n        start: chosen.byte,\r\n        startBit: chosen.bit,\r\n        end: this.tempSelection.byte,\r\n        endBit: this.tempSelection.bit\r\n      })\r\n    } else {\r\n      this.setSelection({\r\n        start: this.tempSelection.byte,\r\n        startBit: this.tempSelection.bit,\r\n        end: chosen.byte,\r\n        endBit: chosen.bit\r\n      })\r\n    }\r\n\r\n    this.tempSelection = null;\r\n    this.cursor = chosen.byte;\r\n    this.bit = chosen.bit;\r\n\r\n    this.hexCursorChanged.emit({byte: this.cursor, bit: this.bit});\r\n    this.hexSelectionChanged.emit(this.selection);\r\n\r\n    if (this.editController.isInProgress) {\r\n      this.editController.commit();\r\n      this.hexDataChanged.emit();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This must be an arrow function so it retains the reference to\r\n   * \"this\" while also not being anonymous. This allows it to be\r\n   * added as an eventlistener directly while retaining the ability\r\n   * to remove it.\r\n   *\r\n   * @memberof MyComponent\r\n   */\r\n  wheel = (evt: WheelEvent) => {\r\n    evt.preventDefault();\r\n\r\n    let scaledVelocity = (!Number.isInteger(evt.deltaY)) ? Math.ceil(evt.deltaY / 100) : Math.ceil(evt.deltaY / 2);\r\n    if (scaledVelocity === -0) scaledVelocity -= 1;\r\n    if (Math.abs(evt.deltaY) > 70) scaledVelocity *= 0.10;\r\n\r\n    if (evt.ctrlKey && evt.shiftKey) scaledVelocity = Math.sign(scaledVelocity) * this.maxLines;\r\n    else if (evt.shiftKey) scaledVelocity = Math.sign(scaledVelocity);\r\n    else if (evt.ctrlKey) scaledVelocity *= 20;\r\n    document.getElementById('tooltip').setAttribute('active', 'false')\r\n\r\n    if (this.lineNumber + scaledVelocity < 0) this.lineNumber = 0;\r\n    else if (this.lineNumber + scaledVelocity > Math.floor(this.editController.length / this.bytesPerLine) - 1) this.lineNumber = Math.floor(this.editController.length / this.bytesPerLine) - 1;\r\n    else this.lineNumber += scaledVelocity;\r\n  }\r\n\r\n  handleRegionKeyDown = (evt: KeyboardEvent) => {\r\n    evt.preventDefault();\r\n\r\n    console.log(evt.target);\r\n  }\r\n\r\n  render() {\r\n    let out;\r\n    if (this.displayAsChunks) out = this.showChunks()\r\n    else  out = this.showHex()\r\n\r\n    return (\r\n      <div class=\"fudgedit-container\">\r\n        {out}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  _toggleScrollListener(evt: MouseEvent) {\r\n    if (evt.type === \"mouseenter\") {\r\n      (evt.target as HTMLElement).addEventListener(\"wheel\", this.wheel, {passive: false});\r\n    }\r\n    else {\r\n      (evt.target as HTMLElement).removeEventListener(\"wheel\", this.wheel, false);\r\n    }\r\n  }\r\n}\r\n\r\n"],"version":3}