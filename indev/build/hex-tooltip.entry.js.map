{"file":"hex-tooltip.entry.esm.js","mappings":";;AAAA,MAAM,UAAU,GAAG,geAAge;;MCQte,OAAO;;;kBAEgC,OAAO;;;;EAIzD,MAAM;;IAEJ,MAAM,GAAG,GAAU,EAAE,CAAC;IAEtB,IAAI,IAAI,CAAC,IAAI,EAAE;MACb,IAAI,IAAI,GAAG,CAAC,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;MAE/E,IAAI,IAAI,CAAC,IAAI;QAAE,GAAG,CAAC,IAAI,CAAC,gBAAO,SAAS,IAAI,CAAC,IAAI,EAAE,CAAQ,EAAC,aAAK,CAAC,CAAC;MACnE,GAAG,CAAC,IAAI,CAAC,gBAAO,SAAS,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAQ,EAAC,aAAK,CAAC,CAAC;MAE5H,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;QAC/C,IAAI,CAAC,MAAM,EAAE,YAAY,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC;UAAE,SAAS;QACnE,IAAI,KAAK,KAAK,IAAI,EAAE;UAClB,GAAG,CAAC,IAAI,CAAC,gBAAO,GAAG,QAAI,KAAK,CAAQ,EAAC,aAAK,CAAC,CAAC;SAC7C;OACF;KACF;SAAM,IAAI,IAAI,CAAC,UAAU,EAAE;MAC1B,GAAG,CAAC,IAAI,CAAC,gBAAO,IAAI,CAAC,UAAU,CAAQ,CAAC,CAAC;KAC1C;SAAM;MACL,GAAG,CAAC,IAAI,CAAC,8BAAwB,CAAC,CAAA;KACnC;IAED,OAAO,GAAG,CAAC;GACZ;;;;;;","names":[],"sources":["./src/components/tooltip/tooltip.css?tag=hex-tooltip","./src/components/tooltip/tooltip.tsx"],"sourcesContent":["hex-tooltip {\r\n  position: fixed;\r\n  display: none;\r\n\r\n  box-sizing: border-box;\r\n  font-size: 14px;\r\n  max-width: 400px;\r\n  padding: 5px;\r\n  border-radius: 2px;\r\n\r\n  background-color: #000;\r\n  color: white;\r\n\r\n  z-index: 1000;\r\n  pointer-events: none;\r\n  font-family: 'Courier New', Courier, monospace;\r\n  font-size: 14px \r\n}\r\n\r\nhex-tooltip:not([active=false]) {\r\n  display: block;\r\n  left: calc(var(--mouse-x) * 1px);\r\n  top: calc(var(--mouse-y) * 1px);\r\n  transition: .2s left ease, .2s top ease;\r\n}\r\n\r\nhex-tooltip[active=frozen] {\r\n  pointer-events: all;\r\n  user-select: text;\r\n  transition: none;\r\n}","import { Component, Prop, h } from \"@stencil/core\";\r\nimport { ActiveMode } from './interfaces';\r\n\r\n@Component({\r\n  tag: 'hex-tooltip',\r\n  styleUrl: 'tooltip.css',\r\n  shadow: false,\r\n})\r\nexport class Tooltip {\r\n\r\n  @Prop({attribute: 'active'}) active: ActiveMode = \"false\";\r\n  @Prop({attribute: 'complex'}) data: {[key: string]: string} | string;\r\n  @Prop({attribute: 'simple'}) simpleText: string;\r\n\r\n  render() {\r\n    // if (this.active !== \"false\") return;\r\n    const out: any[] = [];\r\n\r\n    if (this.data) {\r\n      let data = (typeof this.data === 'string') ? JSON.parse(this.data) : this.data;\r\n\r\n      if (data.name) out.push(<span>{`name: ${data.name}`}</span>,<br/>);\r\n      out.push(<span>{`size: ${data.end - data.start} [0x${data.start.toString(16)} - 0x${data.end.toString(16)}]`}</span>,<br/>);\r\n\r\n      for (const [key, value] of Object.entries(data)) {\r\n        if (['name', 'subRegions', 'start', 'end'].includes(key)) continue;\r\n        if (value !== null) {\r\n          out.push(<span>{key}: {value}</span>,<br/>);\r\n        }\r\n      }\r\n    } else if (this.simpleText) {\r\n      out.push(<span>{this.simpleText}</span>);\r\n    } else {\r\n      out.push(<span>placeholder</span>)\r\n    }\r\n\r\n    return out;\r\n  }\r\n}\r\n"],"version":3}